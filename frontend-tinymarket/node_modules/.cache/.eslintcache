[{"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\index.js":"1","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\App.js":"2","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\reportWebVitals.js":"3","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\ConnectWallet.js":"4","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\ContractCallVote.js":"5","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\Mint.js":"6","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\home.js":"7","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\profile.js":"8","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\AssetSell.js":"9","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\AssetPurchase.js":"10","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\AssetCard.js":"11","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\transactionHistory.js":"12","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\ListingForm.js":"13","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\purchaseForm.js":"14","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\TestNetNFTSList.js":"15","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\CurrentListings.js":"16"},{"size":996,"mtime":1726557345584,"results":"17","hashOfConfig":"18"},{"size":2130,"mtime":1726557345579,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1726557345585,"results":"20","hashOfConfig":"18"},{"size":1143,"mtime":1726557345580,"results":"21","hashOfConfig":"18"},{"size":1465,"mtime":1724825858248,"results":"22","hashOfConfig":"23"},{"size":3048,"mtime":1726557345581,"results":"24","hashOfConfig":"18"},{"size":139,"mtime":1726557345582,"results":"25","hashOfConfig":"18"},{"size":2222,"mtime":1726557345583,"results":"26","hashOfConfig":"18"},{"size":318,"mtime":1726557345582,"results":"27","hashOfConfig":"18"},{"size":481,"mtime":1726588640755,"results":"28","hashOfConfig":"18"},{"size":5819,"mtime":1726557345579,"results":"29","hashOfConfig":"18"},{"size":1090,"mtime":1726557345583,"results":"30","hashOfConfig":"18"},{"size":6318,"mtime":1726565803750,"results":"31","hashOfConfig":"18"},{"size":3133,"mtime":1726589137248,"results":"32","hashOfConfig":"18"},{"size":2458,"mtime":1726557345581,"results":"33","hashOfConfig":"18"},{"size":4502,"mtime":1726591462302,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"yx1vil",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"rsw0m4",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\index.js",[],[],["88"],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\App.js",["89"],[],"// LIBRARY IMPORTS\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\n\r\n// CSS FILES\r\nimport \"./App.css\";\r\n\r\n// PAGE FILES\r\nimport Home from './components/pages/home.js';\r\nimport Profile from './components/pages/profile.js';\r\nimport AssetSell from './components/pages/AssetSell.js';\r\nimport AssetPurchase from './components/pages/AssetPurchase.js';\r\nimport transactionHistory from './components/pages/transactionHistory.js';\r\n\r\n// CONTRACT FUNCTIONS\r\nimport ConnectWallet from \"./components/ConnectWallet\";\r\nimport Mint from \"./components/Mint\";\r\n\r\nfunction App() {\r\n  const [initialView, setInitialView] = useState(false);\r\n  \r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {/* Navbar will always be visible */}\r\n        <nav>\r\n          <ConnectWallet />\r\n          <div className=\"nav-center\">\r\n            <Link to=\"/\" onClick={() => setInitialView(false)}>Tiny Market</Link>\r\n          </div>\r\n          <div className=\"nav-menu\">\r\n            <Link to=\"/\" onClick={() => setInitialView(false)} className=\"App-link\">Home</Link>\r\n            <Link to=\"/profile\" onClick={() => setInitialView(false)} className=\"App-link\">Profile</Link>\r\n            <Link to=\"/assetsell\" onClick={() => setInitialView(false)} className=\"App-link\">AssetSell</Link>\r\n            <Link to=\"/assetpurchase\" onClick={() => setInitialView(false)} className=\"App-link\">AssetPurchase</Link>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* Conditional rendering based on initialView state */}\r\n        {initialView ? (\r\n          <header className=\"App-header\">\r\n            <Mint />\r\n          </header>\r\n        ) : (\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/profile\" element={<Profile />} />\r\n            <Route path=\"/assetsell\" element={<AssetSell />} />\r\n            <Route path=\"/assetpurchase\" element={<AssetPurchase />} />\r\n            <Route path=\"/transactions\" element={<transactionHistory />} />\r\n          </Routes>\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\reportWebVitals.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\ConnectWallet.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\ContractCallVote.js",[],[],["90"],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\Mint.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\home.js",["91"],[],"import React, { useState } from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\profile.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\AssetSell.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\AssetPurchase.js",["92"],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\AssetCard.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\pages\\transactionHistory.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\ListingForm.js",["93"],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\purchaseForm.js",["94"],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\TestNetNFTSList.js",[],[],"C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\src\\components\\CurrentListings.js",["95"],[],"import React, { useState, useEffect } from 'react';\r\nimport { callReadOnlyFunction } from '@stacks/transactions'; // Import the necessary library functions\r\nimport { StacksTestnet } from \"@stacks/network\";\r\nimport { uintCV } from \"@stacks/transactions\";\r\nimport { userSession } from \"./ConnectWallet\";\r\n\r\nconst CurrentListings = ({ contractAddress, contractName }) => {\r\n  const [listings, setListings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const stxAddress = userSession.loadUserData().profile.stxAddress.mainnet;\r\n\r\n  // Function to get the last listing ID\r\n  const fetchLastListingId = async () => {\r\n    try {\r\n      const options = {\r\n        network: new StacksTestnet(),\r\n        contractAddress: \"ST1NWPSRC02Z9A20RHSBGDEDG9H8CHS6ENJ2N3TTH\",\r\n        contractName: \"sip009-nft\",\r\n        functionName: 'get-last-token-id',\r\n        functionArgs: [],\r\n        senderAddress: stxAddress,\r\n      };\r\n      \r\n      const result = await callReadOnlyFunction(options);\r\n      console.log('Result from get-last-token-id:', result);\r\n      return Number(result.value.value); // Get the number from the result\r\n    } catch (error) {\r\n      console.error('Error fetching last listing ID:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // Function to fetch individual listing by ID\r\n  const fetchListing = async (listingId) => {\r\n    try {\r\n      const options = {\r\n        network: new StacksTestnet(),\r\n        contractAddress: \"ST1NWPSRC02Z9A20RHSBGDEDG9H8CHS6ENJ2N3TTH\",\r\n        contractName: \"tiny-market\",\r\n        functionName: 'get-listing',\r\n        functionArgs: [uintCV(listingId)],\r\n        senderAddress: stxAddress,\r\n      };\r\n      \r\n      const result = await callReadOnlyFunction(options);\r\n      console.log(`Result from get-listing for ID ${listingId}:`, result);\r\n      return result.value ? result.value : null;\r\n    } catch (error) {\r\n      console.error(`Error fetching listing ID ${listingId}:`, error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // Fetch all active listings\r\n  const fetchAllListings = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error before fetching\r\n    try {\r\n      const lastListingId = await fetchLastListingId();\r\n      if (isNaN(lastListingId)) {\r\n        throw new Error('Invalid last listing ID');\r\n      }\r\n      console.log('Last listing ID:', lastListingId);\r\n      const fetchedListings = [];\r\n      \r\n      for (let id = 0; id <= lastListingId; id++) { // Use <= to include the last ID\r\n        const listing = await fetchListing(id);\r\n        if (listing) {\r\n          const tokenId = listing.data['token-id']?.value;\r\n          const price = listing.data['price']?.value;\r\n          const expiry = listing.data['expiry']?.value;\r\n\r\n          // Ensure tokenId and price are BigInt and greater than 0\r\n          if (typeof tokenId === 'bigint' && price > 0) {\r\n            fetchedListings.push({\r\n              listingId: id.toString(), // Convert ID to string for display\r\n              tokenId: tokenId.toString(), // Convert BigInt to string for display\r\n              price: price.toString(),     // Convert BigInt to string for display\r\n              expiry: expiry ? expiry.toString() : 'N/A', // Convert expiry to string or 'N/A'\r\n            });\r\n          } else {\r\n            console.warn(`Invalid listing data for ID ${id}`);\r\n          }\r\n        } else {\r\n          console.warn(`No listing found for ID ${id}`);\r\n        }\r\n      }\r\n      console.log('Fetched Listings:', fetchedListings);\r\n      setListings(fetchedListings);\r\n    } catch (error) {\r\n      console.error('Error fetching all listings:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllListings(); // Fetch listings on component mount\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading listings...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Current NFT Listings</h2>\r\n      {listings.length === 0 ? (\r\n        <p>No listings available</p>\r\n      ) : (\r\n        <ul>\r\n          {listings.map((listing, index) => (\r\n            <li key={index}>\r\n              Listing ID: {listing.listingId} - Token ID: {listing.tokenId} - Price: {listing.price} STX - Expiry: {listing.expiry}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentListings;\r\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":13,"column":8,"nodeType":"100","messageId":"101","endLine":13,"endColumn":26},{"ruleId":"96","replacedBy":"102"},{"ruleId":"98","severity":1,"message":"103","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"104","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":126,"column":11,"nodeType":"107","endLine":126,"endColumn":64},{"ruleId":"98","severity":1,"message":"108","line":10,"column":10,"nodeType":"100","messageId":"101","endLine":10,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":101,"column":6,"nodeType":"111","endLine":101,"endColumn":8,"suggestions":"112"},"no-new-object",["113"],"no-unused-vars","'transactionHistory' is defined but never used.","Identifier","unusedVar",["113"],"'useState' is defined but never used.","'Mint' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'userSession' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllListings'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-object-constructor",{"desc":"115","fix":"116"},"Update the dependencies array to be: [fetchAllListings]",{"range":"117","text":"118"},[3878,3880],"[fetchAllListings]"]