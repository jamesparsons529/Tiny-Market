{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\ListingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useConnect } from \"@stacks/connect-react\";\nimport { StacksMocknet } from \"@stacks/network\";\nimport { AnchorMode, principalCV, uintCV } from \"@stacks/transactions\";\nimport { userSession } from \"./ConnectWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListingForm = () => {\n  _s();\n  const {\n    doContractCall\n  } = useConnect();\n  const [nftAssetContract, setNftAssetContract] = useState('');\n  const [tokenId, setTokenId] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [price, setPrice] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation to check if all necessary inputs are filled\n    if (!nftAssetContract || !tokenId || !expiry || !price) {\n      window.alert(\"Please fill in all fields.\");\n      return;\n    }\n    try {\n      // Convert values to Clarity types\n      const nftAssetContractPrincipal = principalCV(nftAssetContract);\n      const tokenIdCV = uintCV(parseInt(tokenId));\n      const expiryCV = uintCV(parseInt(expiry));\n      const priceCV = uintCV(parseInt(price));\n      await doContractCall({\n        network: new StacksMocknet(),\n        anchorMode: AnchorMode.Any,\n        contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\",\n        // Contract address\n        contractName: \"tiny-market\",\n        // Contract name\n        functionName: \"list-asset\",\n        functionArgs: [nftAssetContractPrincipal,\n        // NFT asset contract principal\n        tokenIdCV,\n        // Token ID\n        expiryCV,\n        // Expiry block height\n        priceCV // Price\n        ],\n\n        onFinish: data => {\n          window.alert(\"Asset listed successfully!\");\n        },\n        onCancel: () => {\n          console.log(\"onCancel:\", \"Transaction was canceled\");\n          window.alert(\"Asset listing failed.\");\n        }\n      });\n    } catch (error) {\n      // Enhanced error handling\n      console.error(\"Error during contract call:\", error);\n      window.alert(\"An error occurred while listing the asset. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nft-asset-contract\",\n        children: \"NFT Asset Contract Principal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nft-asset-contract\",\n        value: nftAssetContract,\n        onChange: e => setNftAssetContract(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"token-id\",\n        children: \"NFT Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"token-id\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"expiry\",\n        children: \"Expiry Block Height:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"expiry\",\n        value: expiry,\n        onChange: e => setExpiry(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"List Asset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ListingForm, \"JzCTd2Gn+j0JN7MZjZKI4YIHdlY=\", false, function () {\n  return [useConnect];\n});\n_c = ListingForm;\nexport default ListingForm;\nvar _c;\n$RefreshReg$(_c, \"ListingForm\");","map":{"version":3,"names":["React","useState","useConnect","StacksMocknet","AnchorMode","principalCV","uintCV","userSession","jsxDEV","_jsxDEV","ListingForm","_s","doContractCall","nftAssetContract","setNftAssetContract","tokenId","setTokenId","expiry","setExpiry","price","setPrice","handleSubmit","e","preventDefault","window","alert","nftAssetContractPrincipal","tokenIdCV","parseInt","expiryCV","priceCV","network","anchorMode","Any","contractAddress","contractName","functionName","functionArgs","onFinish","data","onCancel","console","log","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/ListingForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useConnect } from \"@stacks/connect-react\";\r\nimport { StacksMocknet } from \"@stacks/network\";\r\nimport { AnchorMode, \r\n    principalCV, \r\n    uintCV \r\n} from \"@stacks/transactions\";\r\nimport { userSession } from \"./ConnectWallet\";\r\n\r\nconst ListingForm = () => {\r\n  const { doContractCall } = useConnect();\r\n\r\n  const [nftAssetContract, setNftAssetContract] = useState('');\r\n  const [tokenId, setTokenId] = useState('');\r\n  const [expiry, setExpiry] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic validation to check if all necessary inputs are filled\r\n    if (!nftAssetContract || !tokenId || !expiry || !price) {\r\n      window.alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Convert values to Clarity types\r\n      const nftAssetContractPrincipal = principalCV(nftAssetContract);\r\n      const tokenIdCV = uintCV(parseInt(tokenId));\r\n      const expiryCV = uintCV(parseInt(expiry));\r\n      const priceCV = uintCV(parseInt(price));\r\n\r\n      await doContractCall({\r\n        network: new StacksMocknet(),\r\n        anchorMode: AnchorMode.Any,\r\n        contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\", // Contract address\r\n        contractName: \"tiny-market\", // Contract name\r\n        functionName: \"list-asset\",\r\n        functionArgs: [\r\n          nftAssetContractPrincipal, // NFT asset contract principal\r\n          tokenIdCV, // Token ID\r\n          expiryCV, // Expiry block height\r\n          priceCV, // Price\r\n        ],\r\n        onFinish: (data) => {\r\n          window.alert(\"Asset listed successfully!\");\r\n        },\r\n        onCancel: () => {\r\n          console.log(\"onCancel:\", \"Transaction was canceled\");\r\n          window.alert(\"Asset listing failed.\");\r\n        },\r\n      });\r\n    } catch (error) {\r\n      // Enhanced error handling\r\n      console.error(\"Error during contract call:\", error);\r\n      window.alert(\"An error occurred while listing the asset. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"nft-asset-contract\">NFT Asset Contract Principal:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nft-asset-contract\"\r\n          value={nftAssetContract}\r\n          onChange={(e) => setNftAssetContract(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"token-id\">NFT Token ID:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"token-id\"\r\n          value={tokenId}\r\n          onChange={(e) => setTokenId(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"expiry\">Expiry Block Height:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"expiry\"\r\n          value={expiry}\r\n          onChange={(e) => setExpiry(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"price\">Price:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">List Asset</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ListingForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}