{"ast":null,"code":"import { config } from './config';\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\nconst levelToInt = {};\nconst intToLevel = {};\nfor (let index = 0; index < levels.length; index++) {\n  const level = levels[index];\n  levelToInt[level] = index;\n  intToLevel[index] = level;\n}\nexport class Logger {\n  static error(message) {\n    if (!this.shouldLog('error')) return;\n    console.error(this.logMessage('error', message));\n  }\n  static warn(message) {\n    if (!this.shouldLog('warn')) return;\n    console.warn(this.logMessage('warn', message));\n  }\n  static info(message) {\n    if (!this.shouldLog('info')) return;\n    console.log(this.logMessage('info', message));\n  }\n  static debug(message) {\n    if (!this.shouldLog('debug')) return;\n    console.log(this.logMessage('debug', message));\n  }\n  static logMessage(level, message) {\n    return `[${level.toUpperCase()}] ${message}`;\n  }\n  static shouldLog(level) {\n    const currentLevel = levelToInt[config.logLevel];\n    return currentLevel <= levelToInt[level];\n  }\n}","map":{"version":3,"names":["config","levels","levelToInt","intToLevel","index","length","level","Logger","error","message","shouldLog","console","logMessage","warn","info","log","debug","toUpperCase","currentLevel","logLevel"],"sources":["C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\node_modules\\@stacks\\common\\src\\logger.ts"],"sourcesContent":["import { config } from './config';\r\n\r\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\r\n\r\nconst levelToInt: { [level: string]: number } = {};\r\nconst intToLevel: { [int: number]: string } = {};\r\n\r\nfor (let index = 0; index < levels.length; index++) {\r\n  const level = levels[index];\r\n  levelToInt[level] = index;\r\n  intToLevel[index] = level;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class Logger {\r\n  static error(message: string) {\r\n    if (!this.shouldLog('error')) return;\r\n    console.error(this.logMessage('error', message));\r\n  }\r\n\r\n  static warn(message: string) {\r\n    if (!this.shouldLog('warn')) return;\r\n    console.warn(this.logMessage('warn', message));\r\n  }\r\n\r\n  static info(message: string) {\r\n    if (!this.shouldLog('info')) return;\r\n    console.log(this.logMessage('info', message));\r\n  }\r\n\r\n  static debug(message: string) {\r\n    if (!this.shouldLog('debug')) return;\r\n    console.log(this.logMessage('debug', message));\r\n  }\r\n\r\n  static logMessage(level: string, message: string) {\r\n    return `[${level.toUpperCase()}] ${message}`;\r\n  }\r\n\r\n  static shouldLog(level: string) {\r\n    const currentLevel = levelToInt[config.logLevel];\r\n    return currentLevel <= levelToInt[level];\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AAEjC,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;AAEzD,MAAMC,UAAU,GAAgC,EAAE;AAClD,MAAMC,UAAU,GAA8B,EAAE;AAEhD,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGH,MAAM,CAACI,MAAM,EAAED,KAAK,EAAE,EAAE;EAClD,MAAME,KAAK,GAAGL,MAAM,CAACG,KAAK,CAAC;EAC3BF,UAAU,CAACI,KAAK,CAAC,GAAGF,KAAK;EACzBD,UAAU,CAACC,KAAK,CAAC,GAAGE,KAAK;;AAM3B,OAAM,MAAOC,MAAM;EACjB,OAAOC,KAAKA,CAACC,OAAe;IAC1B,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,OAAO,CAAC,EAAE;IAC9BC,OAAO,CAACH,KAAK,CAAC,IAAI,CAACI,UAAU,CAAC,OAAO,EAAEH,OAAO,CAAC,CAAC;EAClD;EAEA,OAAOI,IAAIA,CAACJ,OAAe;IACzB,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,MAAM,CAAC,EAAE;IAC7BC,OAAO,CAACE,IAAI,CAAC,IAAI,CAACD,UAAU,CAAC,MAAM,EAAEH,OAAO,CAAC,CAAC;EAChD;EAEA,OAAOK,IAAIA,CAACL,OAAe;IACzB,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,MAAM,CAAC,EAAE;IAC7BC,OAAO,CAACI,GAAG,CAAC,IAAI,CAACH,UAAU,CAAC,MAAM,EAAEH,OAAO,CAAC,CAAC;EAC/C;EAEA,OAAOO,KAAKA,CAACP,OAAe;IAC1B,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,OAAO,CAAC,EAAE;IAC9BC,OAAO,CAACI,GAAG,CAAC,IAAI,CAACH,UAAU,CAAC,OAAO,EAAEH,OAAO,CAAC,CAAC;EAChD;EAEA,OAAOG,UAAUA,CAACN,KAAa,EAAEG,OAAe;IAC9C,OAAO,IAAIH,KAAK,CAACW,WAAW,EAAE,KAAKR,OAAO,EAAE;EAC9C;EAEA,OAAOC,SAASA,CAACJ,KAAa;IAC5B,MAAMY,YAAY,GAAGhB,UAAU,CAACF,MAAM,CAACmB,QAAQ,CAAC;IAChD,OAAOD,YAAY,IAAIhB,UAAU,CAACI,KAAK,CAAC;EAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}