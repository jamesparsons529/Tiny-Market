{"ast":null,"code":"const GLOBAL_DETECTION_CACHE_KEY = '_blockstackDidCheckEchoReply';\nconst ECHO_REPLY_PARAM = 'echoReply';\nconst AUTH_CONTINUATION_PARAM = 'authContinuation';\nfunction getQueryStringParams(query) {\n  if (!query) {\n    return {};\n  }\n  const trimmed = /^[?#]/.test(query) ? query.slice(1) : query;\n  return trimmed.split('&').reduce((params, param) => {\n    const [key, value] = param.split('=');\n    params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n    return params;\n  }, {});\n}\nexport function protocolEchoReplyDetection() {\n  let globalScope;\n  if (typeof self !== 'undefined') {\n    globalScope = self;\n  } else if (typeof window !== 'undefined') {\n    globalScope = window;\n  } else {\n    return false;\n  }\n  if (!globalScope.location || !globalScope.localStorage) {\n    return false;\n  }\n  const existingDetection = globalScope[GLOBAL_DETECTION_CACHE_KEY];\n  if (typeof existingDetection === 'boolean') {\n    return existingDetection;\n  }\n  const searchParams = getQueryStringParams(globalScope.location.search);\n  const echoReplyParam = searchParams[ECHO_REPLY_PARAM];\n  if (echoReplyParam) {\n    globalScope[GLOBAL_DETECTION_CACHE_KEY] = true;\n    const echoReplyKey = `echo-reply-${echoReplyParam}`;\n    globalScope.localStorage.setItem(echoReplyKey, 'success');\n    globalScope.setTimeout(() => {\n      const authContinuationParam = searchParams[AUTH_CONTINUATION_PARAM];\n      globalScope.location.href = authContinuationParam;\n    }, 10);\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["GLOBAL_DETECTION_CACHE_KEY","ECHO_REPLY_PARAM","AUTH_CONTINUATION_PARAM","getQueryStringParams","query","trimmed","test","slice","split","reduce","params","param","key","value","decodeURIComponent","replace","protocolEchoReplyDetection","globalScope","self","window","location","localStorage","existingDetection","searchParams","search","echoReplyParam","echoReplyKey","setItem","setTimeout","authContinuationParam","href"],"sources":["C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\node_modules\\@stacks\\auth\\src\\protocolEchoDetection.ts"],"sourcesContent":["/**\r\n * This logic is in a separate file with no dependencies so that it can be\r\n * loaded and executed as soon as possible to fulfill the purpose of the protocol\r\n * detection technique. The effectiveness of this is obviously subject to how web\r\n * apps bundle/consume the blockstack.js lib.\r\n */\r\n\r\nconst GLOBAL_DETECTION_CACHE_KEY = '_blockstackDidCheckEchoReply';\r\nconst ECHO_REPLY_PARAM = 'echoReply';\r\nconst AUTH_CONTINUATION_PARAM = 'authContinuation';\r\n\r\nfunction getQueryStringParams(query: string): Record<string, string> {\r\n  if (!query) {\r\n    return {};\r\n  }\r\n  // Trim a starting `?` character if exists\r\n  const trimmed = /^[?#]/.test(query) ? query.slice(1) : query;\r\n  return trimmed.split('&').reduce(\r\n    (params, param) => {\r\n      const [key, value] = param.split('=');\r\n      params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\r\n      return params;\r\n    },\r\n    {} as Record<string, string>\r\n  );\r\n}\r\n\r\n/**\r\n * Checks if the current window location URL contains an 'echoReply' parameter\r\n * which indicates that this page was only opened to signal back to the originating\r\n * tab that the protocol handler is installed.\r\n * If found, then localStorage events are used to notify the other tab,\r\n * and this page is redirected back to the Blockstack authenticator URL.\r\n * This function caches its result and will not trigger multiple redirects when\r\n * invoked multiple times.\r\n * @returns True if detected and the page will be automatically redirected.\r\n * @hidden\r\n */\r\nexport function protocolEchoReplyDetection(): boolean {\r\n  // Check that the `window` APIs exist\r\n  let globalScope: Window;\r\n  if (typeof self !== 'undefined') {\r\n    globalScope = self;\r\n  } else if (typeof window !== 'undefined') {\r\n    globalScope = window;\r\n  } else {\r\n    // Exit detection function - we are not running in a browser environment.\r\n    return false;\r\n  }\r\n\r\n  if (!globalScope.location || !globalScope.localStorage) {\r\n    // Exit detection function - we are not running in a browser environment.\r\n    return false;\r\n  }\r\n\r\n  // Avoid performing the check twice and triggered multiple redirect timers.\r\n  const existingDetection = (globalScope as any)[GLOBAL_DETECTION_CACHE_KEY];\r\n  if (typeof existingDetection === 'boolean') {\r\n    return existingDetection;\r\n  }\r\n\r\n  const searchParams = getQueryStringParams(globalScope.location.search);\r\n  const echoReplyParam = searchParams[ECHO_REPLY_PARAM];\r\n  if (echoReplyParam) {\r\n    (globalScope as any)[GLOBAL_DETECTION_CACHE_KEY] = true;\r\n\r\n    // Use localStorage to notify originated tab that protocol handler is available and working.\r\n    const echoReplyKey = `echo-reply-${echoReplyParam}`;\r\n\r\n    // Set the echo-reply result in localStorage for the other window to see.\r\n    globalScope.localStorage.setItem(echoReplyKey, 'success');\r\n\r\n    // Redirect back to the localhost auth url, as opposed to another protocol launch.\r\n    // This will re-use the same tab rather than creating another useless one.\r\n    globalScope.setTimeout(() => {\r\n      const authContinuationParam = searchParams[AUTH_CONTINUATION_PARAM];\r\n      globalScope.location.href = authContinuationParam;\r\n    }, 10);\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n"],"mappings":"AAOA,MAAMA,0BAA0B,GAAG,8BAA8B;AACjE,MAAMC,gBAAgB,GAAG,WAAW;AACpC,MAAMC,uBAAuB,GAAG,kBAAkB;AAElD,SAASC,oBAAoBA,CAACC,KAAa;EACzC,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,EAAE;;EAGX,MAAMC,OAAO,GAAG,OAAO,CAACC,IAAI,CAACF,KAAK,CAAC,GAAGA,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,GAAGH,KAAK;EAC5D,OAAOC,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAC9B,CAACC,MAAM,EAAEC,KAAK,KAAI;IAChB,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGF,KAAK,CAACH,KAAK,CAAC,GAAG,CAAC;IACrCE,MAAM,CAACE,GAAG,CAAC,GAAGC,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE;IACxE,OAAOL,MAAM;EACf,CAAC,EACD,EAA4B,CAC7B;AACH;AAaA,OAAM,SAAUM,0BAA0BA,CAAA;EAExC,IAAIC,WAAmB;EACvB,IAAI,OAAOC,IAAI,KAAK,WAAW,EAAE;IAC/BD,WAAW,GAAGC,IAAI;GACnB,MAAM,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACxCF,WAAW,GAAGE,MAAM;GACrB,MAAM;IAEL,OAAO,KAAK;;EAGd,IAAI,CAACF,WAAW,CAACG,QAAQ,IAAI,CAACH,WAAW,CAACI,YAAY,EAAE;IAEtD,OAAO,KAAK;;EAId,MAAMC,iBAAiB,GAAIL,WAAmB,CAACjB,0BAA0B,CAAC;EAC1E,IAAI,OAAOsB,iBAAiB,KAAK,SAAS,EAAE;IAC1C,OAAOA,iBAAiB;;EAG1B,MAAMC,YAAY,GAAGpB,oBAAoB,CAACc,WAAW,CAACG,QAAQ,CAACI,MAAM,CAAC;EACtE,MAAMC,cAAc,GAAGF,YAAY,CAACtB,gBAAgB,CAAC;EACrD,IAAIwB,cAAc,EAAE;IACjBR,WAAmB,CAACjB,0BAA0B,CAAC,GAAG,IAAI;IAGvD,MAAM0B,YAAY,GAAG,cAAcD,cAAc,EAAE;IAGnDR,WAAW,CAACI,YAAY,CAACM,OAAO,CAACD,YAAY,EAAE,SAAS,CAAC;IAIzDT,WAAW,CAACW,UAAU,CAAC,MAAK;MAC1B,MAAMC,qBAAqB,GAAGN,YAAY,CAACrB,uBAAuB,CAAC;MACnEe,WAAW,CAACG,QAAQ,CAACU,IAAI,GAAGD,qBAAqB;IACnD,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,IAAI;;EAGb,OAAO,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}