{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\pages\\\\FetchLastTokenIdButton.js\";\nimport React from 'react';\nimport { callReadOnlyFunction } from '@stacks/transactions';\nimport { StacksMocknet } from '@stacks/network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchLastTokenIdButton = () => {\n  const contractAddress = \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\";\n  const contractName = \"sip009-nft\";\n  const functionName = \"get-last-token-id\";\n  const network = new StacksMocknet();\n  const options = {\n    contractAddress,\n    contractName,\n    functionName,\n    network,\n    functionArgs: []\n  };\n  const handleClick = async () => {\n    console.log(\"Options for callReadOnlyFunction:\", options);\n    try {\n      const result = await callReadOnlyFunction(options);\n      console.log(\"Raw result:\", result);\n      const parsedResult = JSON.parse(result);\n      console.log(\"Last token ID result:\", parsedResult);\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error response data:\", error.response.data);\n        console.error(\"Error response status:\", error.response.status);\n        console.error(\"Error response headers:\", error.response.headers);\n      } else {\n        console.error(\"Error message:\", error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => fe(),\n    children: \"Fetch Last Token ID\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = FetchLastTokenIdButton;\nexport default FetchLastTokenIdButton;\nvar _c;\n$RefreshReg$(_c, \"FetchLastTokenIdButton\");","map":{"version":3,"names":["React","callReadOnlyFunction","StacksMocknet","jsxDEV","_jsxDEV","FetchLastTokenIdButton","contractAddress","contractName","functionName","network","options","functionArgs","handleClick","console","log","result","parsedResult","JSON","parse","error","response","data","status","headers","message","onClick","fe","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/pages/FetchLastTokenIdButton.js"],"sourcesContent":["import React from 'react';\r\nimport { callReadOnlyFunction } from '@stacks/transactions';\r\nimport { StacksMocknet } from '@stacks/network';\r\n\r\n\r\n\r\nconst FetchLastTokenIdButton = () => {\r\n\r\n  const contractAddress = \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\";\r\n  const contractName = \"sip009-nft\";  \r\n  const functionName = \"get-last-token-id\";\r\n  const network = new StacksMocknet();\r\n    \r\n  const options = {\r\n    contractAddress,\r\n    contractName,\r\n    functionName,\r\n    network,\r\n    functionArgs: [],\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    \r\n\r\n    console.log(\"Options for callReadOnlyFunction:\", options);\r\n\r\n    try {\r\n      const result = await callReadOnlyFunction(options);\r\n      console.log(\"Raw result:\", result);\r\n      const parsedResult = JSON.parse(result);\r\n      console.log(\"Last token ID result:\", parsedResult);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(\"Error response data:\", error.response.data);\r\n        console.error(\"Error response status:\", error.response.status);\r\n        console.error(\"Error response headers:\", error.response.headers);\r\n      } else {\r\n        console.error(\"Error message:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={() => fe()}>\r\n      Fetch Last Token ID\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FetchLastTokenIdButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAEnC,MAAMC,eAAe,GAAG,2CAA2C;EACnE,MAAMC,YAAY,GAAG,YAAY;EACjC,MAAMC,YAAY,GAAG,mBAAmB;EACxC,MAAMC,OAAO,GAAG,IAAIP,aAAa,CAAC,CAAC;EAEnC,MAAMQ,OAAO,GAAG;IACdJ,eAAe;IACfC,YAAY;IACZC,YAAY;IACZC,OAAO;IACPE,YAAY,EAAE;EAChB,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAG9BC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,OAAO,CAAC;IAEzD,IAAI;MACF,MAAMK,MAAM,GAAG,MAAMd,oBAAoB,CAACS,OAAO,CAAC;MAClDG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,MAAM,CAAC;MAClC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC;MACvCF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,YAAY,CAAC;IACpD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAClBP,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;QAC1DR,OAAO,CAACM,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,QAAQ,CAACE,MAAM,CAAC;QAC9DT,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,QAAQ,CAACG,OAAO,CAAC;MAClE,CAAC,MAAM;QACLV,OAAO,CAACM,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACK,OAAO,CAAC;MAChD;IACF;EACF,CAAC;EAED,oBACEpB,OAAA;IAAQqB,OAAO,EAAEA,CAAA,KAAMC,EAAE,CAAC,CAAE;IAAAC,QAAA,EAAC;EAE7B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GAzCI3B,sBAAsB;AA2C5B,eAAeA,sBAAsB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}