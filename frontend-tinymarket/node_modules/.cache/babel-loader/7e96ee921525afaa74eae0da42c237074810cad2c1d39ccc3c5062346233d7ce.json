{"ast":null,"code":"import { resolveZoneFileToProfile } from '@stacks/profile';\nimport { StacksMainnet, StacksNetwork } from '@stacks/network';\nexport function lookupProfile(lookupOptions) {\n  if (!lookupOptions.username) {\n    return Promise.reject(new Error('No username provided'));\n  }\n  const defaultOptions = {\n    network: new StacksMainnet()\n  };\n  const options = Object.assign(defaultOptions, lookupOptions);\n  const network = StacksNetwork.fromNameOrNetwork(options.network);\n  let lookupPromise;\n  if (options.zoneFileLookupURL) {\n    const url = `${options.zoneFileLookupURL.replace(/\\/$/, '')}/${options.username}`;\n    lookupPromise = network.fetchFn(url).then(response => response.json());\n  } else {\n    lookupPromise = network.getNameInfo(options.username);\n  }\n  return lookupPromise.then(responseJSON => {\n    if (responseJSON.hasOwnProperty('zonefile') && responseJSON.hasOwnProperty('address')) {\n      return resolveZoneFileToProfile(responseJSON.zonefile, responseJSON.address, network.fetchFn);\n    } else {\n      throw new Error('Invalid zonefile lookup response: did not contain `address`' + ' or `zonefile` field');\n    }\n  });\n}","map":{"version":3,"names":["resolveZoneFileToProfile","StacksMainnet","StacksNetwork","lookupProfile","lookupOptions","username","Promise","reject","Error","defaultOptions","network","options","Object","assign","fromNameOrNetwork","lookupPromise","zoneFileLookupURL","url","replace","fetchFn","then","response","json","getNameInfo","responseJSON","hasOwnProperty","zonefile","address"],"sources":["C:\\Users\\user\\Documents\\Tiny-Market\\frontend-tinymarket\\node_modules\\@stacks\\auth\\src\\profile.ts"],"sourcesContent":["import { resolveZoneFileToProfile } from '@stacks/profile';\r\nimport { StacksMainnet, StacksNetwork, StacksNetworkName } from '@stacks/network';\r\n\r\nexport interface ProfileLookupOptions {\r\n  username: string;\r\n  zoneFileLookupURL?: string;\r\n  network?: StacksNetworkName | StacksNetwork;\r\n}\r\n\r\n/**\r\n * Look up a user profile by blockstack ID\r\n *\r\n * @param {string} username - The Blockstack ID of the profile to look up\r\n * @param {string} [zoneFileLookupURL=null] - The URL\r\n * to use for zonefile lookup. If falsey, lookupProfile will use the\r\n * blockstack.js [[getNameInfo]] function.\r\n * @returns {Promise} that resolves to a profile object\r\n */\r\nexport function lookupProfile(lookupOptions: ProfileLookupOptions): Promise<Record<string, any>> {\r\n  if (!lookupOptions.username) {\r\n    return Promise.reject(new Error('No username provided'));\r\n  }\r\n\r\n  const defaultOptions = {\r\n    network: new StacksMainnet(),\r\n  };\r\n  const options = Object.assign(defaultOptions, lookupOptions);\r\n\r\n  const network = StacksNetwork.fromNameOrNetwork(options.network);\r\n  let lookupPromise;\r\n  if (options.zoneFileLookupURL) {\r\n    const url = `${options.zoneFileLookupURL.replace(/\\/$/, '')}/${options.username}`;\r\n    lookupPromise = network.fetchFn(url).then(response => response.json());\r\n  } else {\r\n    lookupPromise = network.getNameInfo(options.username);\r\n  }\r\n  return lookupPromise.then((responseJSON: any) => {\r\n    if (responseJSON.hasOwnProperty('zonefile') && responseJSON.hasOwnProperty('address')) {\r\n      return resolveZoneFileToProfile(responseJSON.zonefile, responseJSON.address, network.fetchFn);\r\n    } else {\r\n      throw new Error(\r\n        'Invalid zonefile lookup response: did not contain `address`' + ' or `zonefile` field'\r\n      );\r\n    }\r\n  });\r\n}\r\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,iBAAiB;AAC1D,SAASC,aAAa,EAAEC,aAAa,QAA2B,iBAAiB;AAiBjF,OAAM,SAAUC,aAAaA,CAACC,aAAmC;EAC/D,IAAI,CAACA,aAAa,CAACC,QAAQ,EAAE;IAC3B,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,sBAAsB,CAAC,CAAC;;EAG1D,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAE,IAAIT,aAAa;GAC3B;EACD,MAAMU,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACJ,cAAc,EAAEL,aAAa,CAAC;EAE5D,MAAMM,OAAO,GAAGR,aAAa,CAACY,iBAAiB,CAACH,OAAO,CAACD,OAAO,CAAC;EAChE,IAAIK,aAAa;EACjB,IAAIJ,OAAO,CAACK,iBAAiB,EAAE;IAC7B,MAAMC,GAAG,GAAG,GAAGN,OAAO,CAACK,iBAAiB,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAIP,OAAO,CAACN,QAAQ,EAAE;IACjFU,aAAa,GAAGL,OAAO,CAACS,OAAO,CAACF,GAAG,CAAC,CAACG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC;GACvE,MAAM;IACLP,aAAa,GAAGL,OAAO,CAACa,WAAW,CAACZ,OAAO,CAACN,QAAQ,CAAC;;EAEvD,OAAOU,aAAa,CAACK,IAAI,CAAEI,YAAiB,IAAI;IAC9C,IAAIA,YAAY,CAACC,cAAc,CAAC,UAAU,CAAC,IAAID,YAAY,CAACC,cAAc,CAAC,SAAS,CAAC,EAAE;MACrF,OAAOzB,wBAAwB,CAACwB,YAAY,CAACE,QAAQ,EAAEF,YAAY,CAACG,OAAO,EAAEjB,OAAO,CAACS,OAAO,CAAC;KAC9F,MAAM;MACL,MAAM,IAAIX,KAAK,CACb,6DAA6D,GAAG,sBAAsB,CACvF;;EAEL,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}