{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\CurrentListings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { callReadOnlyFunction } from '@stacks/transactions';\nimport { StacksTestnet } from \"@stacks/network\";\nimport { uintCV } from \"@stacks/transactions\";\nimport { userSession } from \"./ConnectWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentListings = ({\n  contractAddress,\n  contractName\n}) => {\n  _s();\n  const [listings, setListings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const stxAddress = userSession.loadUserData().profile.stxAddress.mainnet;\n\n  // Function to get the last listing ID\n  const fetchLastListingId = async () => {\n    try {\n      const options = {\n        network: new StacksTestnet(),\n        contractAddress: \"ST1NWPSRC02Z9A20RHSBGDEDG9H8CHS6ENJ2N3TTH\",\n        contractName: \"sip009-nft\",\n        functionName: 'get-last-token-id',\n        functionArgs: [],\n        senderAddress: stxAddress\n      };\n      const result = await callReadOnlyFunction(options);\n      console.log('Result from get-last-token-id:', result);\n      return Number(result.value.value); // Get the number from the result\n    } catch (error) {\n      console.error('Error fetching last listing ID:', error);\n      setError(error.message);\n    }\n  };\n\n  // Function to fetch individual listing by ID\n  const fetchListing = async listingId => {\n    try {\n      const options = {\n        network: new StacksTestnet(),\n        contractAddress: \"ST1NWPSRC02Z9A20RHSBGDEDG9H8CHS6ENJ2N3TTH\",\n        contractName: \"tiny-market\",\n        functionName: 'get-listing',\n        functionArgs: [uintCV(listingId)],\n        senderAddress: stxAddress\n      };\n      const result = await callReadOnlyFunction(options);\n      console.log(`Result from get-listing for ID ${listingId}:`, result);\n      return result.value ? result.value : null;\n    } catch (error) {\n      console.error(`Error fetching listing ID ${listingId}:`, error);\n      setError(error.message);\n    }\n  };\n\n  // Fetch all active listings\n  const fetchAllListings = async () => {\n    setLoading(true);\n    setError(null); // Reset error before fetching\n    try {\n      const lastListingId = await fetchLastListingId();\n      if (isNaN(lastListingId)) {\n        throw new Error('Invalid last listing ID');\n      }\n      console.log('Last listing ID:', lastListingId);\n      const fetchedListings = [];\n      for (let id = 0; id <= lastListingId; id++) {\n        // Use <= to include the last ID\n        const listing = await fetchListing(id);\n        if (listing) {\n          var _listing$data$tokenI, _listing$data$price;\n          const tokenId = (_listing$data$tokenI = listing.data['token-id']) === null || _listing$data$tokenI === void 0 ? void 0 : _listing$data$tokenI.value;\n          const price = (_listing$data$price = listing.data.price) === null || _listing$data$price === void 0 ? void 0 : _listing$data$price.value;\n\n          // Check if the listing is valid\n          if (tokenId && price && price > 0) {\n            console.log(`Listing data for ID ${id}:`, listing.data);\n            fetchedListings.push({\n              tokenId: tokenId,\n              price: price\n            });\n          } else {\n            console.warn(`Invalid listing for ID ${id}`);\n          }\n        } else {\n          console.warn(`No listing found for ID ${id}`);\n        }\n      }\n      console.log('Fetched Listings:', fetchedListings);\n      setListings(fetchedListings);\n    } catch (error) {\n      console.error('Error fetching all listings:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAllListings(); // Fetch listings on component mount\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading listings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current NFT Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), listings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No listings available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listings.map((listing, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Token ID: \", listing.tokenId, \" - Price: \", listing.price, \" STX\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentListings, \"K/kudfcAqDWFSJHQkZXCaqavJIs=\");\n_c = CurrentListings;\nexport default CurrentListings;\nvar _c;\n$RefreshReg$(_c, \"CurrentListings\");","map":{"version":3,"names":["React","useState","useEffect","callReadOnlyFunction","StacksTestnet","uintCV","userSession","jsxDEV","_jsxDEV","CurrentListings","contractAddress","contractName","_s","listings","setListings","loading","setLoading","error","setError","stxAddress","loadUserData","profile","mainnet","fetchLastListingId","options","network","functionName","functionArgs","senderAddress","result","console","log","Number","value","message","fetchListing","listingId","fetchAllListings","lastListingId","isNaN","Error","fetchedListings","id","listing","_listing$data$tokenI","_listing$data$price","tokenId","data","price","push","warn","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/CurrentListings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { callReadOnlyFunction } from '@stacks/transactions';\r\nimport { StacksTestnet } from \"@stacks/network\";\r\nimport { uintCV } from \"@stacks/transactions\";\r\nimport { userSession } from \"./ConnectWallet\";\r\n\r\nconst CurrentListings = ({ contractAddress, contractName }) => {\r\n  const [listings, setListings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const stxAddress = userSession.loadUserData().profile.stxAddress.mainnet;\r\n\r\n  // Function to get the last listing ID\r\n  const fetchLastListingId = async () => {\r\n    try {\r\n      const options = {\r\n        network: new StacksTestnet(),\r\n        contractAddress: \"ST1NWPSRC02Z9A20RHSBGDEDG9H8CHS6ENJ2N3TTH\",\r\n        contractName: \"sip009-nft\",\r\n        functionName: 'get-last-token-id',\r\n        functionArgs: [],\r\n        senderAddress: stxAddress,\r\n      };\r\n      \r\n      const result = await callReadOnlyFunction(options);\r\n      console.log('Result from get-last-token-id:', result);\r\n      return Number(result.value.value); // Get the number from the result\r\n    } catch (error) {\r\n      console.error('Error fetching last listing ID:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // Function to fetch individual listing by ID\r\n  const fetchListing = async (listingId) => {\r\n    try {\r\n      const options = {\r\n        network: new StacksTestnet(),\r\n        contractAddress: \"ST1NWPSRC02Z9A20RHSBGDEDG9H8CHS6ENJ2N3TTH\",\r\n        contractName: \"tiny-market\",\r\n        functionName: 'get-listing',\r\n        functionArgs: [uintCV(listingId)],\r\n        senderAddress: stxAddress,\r\n      };\r\n      \r\n      const result = await callReadOnlyFunction(options);\r\n      console.log(`Result from get-listing for ID ${listingId}:`, result);\r\n      return result.value ? result.value : null;\r\n    } catch (error) {\r\n      console.error(`Error fetching listing ID ${listingId}:`, error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // Fetch all active listings\r\n  const fetchAllListings = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error before fetching\r\n    try {\r\n      const lastListingId = await fetchLastListingId();\r\n      if (isNaN(lastListingId)) {\r\n        throw new Error('Invalid last listing ID');\r\n      }\r\n      console.log('Last listing ID:', lastListingId);\r\n      const fetchedListings = [];\r\n      \r\n      for (let id = 0; id <= lastListingId; id++) { // Use <= to include the last ID\r\n        const listing = await fetchListing(id);\r\n        if (listing) {\r\n          const tokenId = listing.data['token-id']?.value;\r\n          const price = listing.data.price?.value;\r\n\r\n          // Check if the listing is valid\r\n          if (tokenId && price && price > 0) {\r\n            console.log(`Listing data for ID ${id}:`, listing.data);\r\n            fetchedListings.push({\r\n              tokenId: tokenId, \r\n              price: price,\r\n            });\r\n          } else {\r\n            console.warn(`Invalid listing for ID ${id}`);\r\n          }\r\n        } else {\r\n          console.warn(`No listing found for ID ${id}`);\r\n        }\r\n      }\r\n      console.log('Fetched Listings:', fetchedListings);\r\n      setListings(fetchedListings);\r\n    } catch (error) {\r\n      console.error('Error fetching all listings:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllListings(); // Fetch listings on component mount\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading listings...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Current NFT Listings</h2>\r\n      {listings.length === 0 ? (\r\n        <p>No listings available</p>\r\n      ) : (\r\n        <ul>\r\n          {listings.map((listing, index) => (\r\n            <li key={index}>\r\n              Token ID: {listing.tokenId} - Price: {listing.price} STX\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentListings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}