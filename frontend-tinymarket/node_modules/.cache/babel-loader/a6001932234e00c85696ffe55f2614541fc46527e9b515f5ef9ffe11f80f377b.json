{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\totalNFTButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useConnect } from \"@stacks/connect-react\";\nimport { StacksMocknet } from \"@stacks/network\";\nimport { callReadOnlyFunction, uintCV, getCVType, deserializeCV } from \"@stacks/transactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetLastTokenIdButton = () => {\n  _s();\n  const {\n    doContractCall\n  } = useConnect();\n  const handleButtonClick = async () => {\n    const options = {\n      contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\",\n      contractName: \"sip009-nft\",\n      functionName: \"get-last-token-id\",\n      functionArgs: []\n    };\n    const results = await callReadOnlyFunction(options);\n    console.log(\"Results:\", results);\n    const response = await callReadOnlyFunction(options);\n    const result = deserializeCV(response.result);\n    console.log(\"Last token ID:\", result.value.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleButtonClick,\n    children: \"Get Last Token ID\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(GetLastTokenIdButton, \"P3HkHp98suz6H5U4Rb98FIRDOug=\", false, function () {\n  return [useConnect];\n});\n_c = GetLastTokenIdButton;\nexport default GetLastTokenIdButton;\nvar _c;\n$RefreshReg$(_c, \"GetLastTokenIdButton\");","map":{"version":3,"names":["React","useConnect","StacksMocknet","callReadOnlyFunction","uintCV","getCVType","deserializeCV","jsxDEV","_jsxDEV","GetLastTokenIdButton","_s","doContractCall","handleButtonClick","options","contractAddress","contractName","functionName","functionArgs","results","console","log","response","result","value","toString","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/totalNFTButton.js"],"sourcesContent":["import React from 'react';\r\nimport { useConnect } from \"@stacks/connect-react\";\r\nimport { StacksMocknet } from \"@stacks/network\";\r\nimport { callReadOnlyFunction, uintCV, getCVType, deserializeCV } from \"@stacks/transactions\";\r\n\r\nconst GetLastTokenIdButton = () => {\r\n  const { doContractCall } = useConnect();\r\n\r\n  const handleButtonClick = async () => {\r\n    const options = {\r\n      contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\",\r\n      contractName: \"sip009-nft\",\r\n      functionName: \"get-last-token-id\",\r\n      functionArgs: [],\r\n    };\r\n\r\n    const results = await callReadOnlyFunction(options);\r\n    console.log(\"Results:\", results);\r\n\r\n    const response = await callReadOnlyFunction(options);\r\n    const result = deserializeCV(response.result);\r\n\r\n    console.log(\"Last token ID:\", result.value.toString());\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleButtonClick}>\r\n      Get Last Token ID\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GetLastTokenIdButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,oBAAoB,EAAEC,MAAM,EAAEC,SAAS,EAAEC,aAAa,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9F,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAe,CAAC,GAAGV,UAAU,CAAC,CAAC;EAEvC,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,OAAO,GAAG;MACdC,eAAe,EAAE,2CAA2C;MAC5DC,YAAY,EAAE,YAAY;MAC1BC,YAAY,EAAE,mBAAmB;MACjCC,YAAY,EAAE;IAChB,CAAC;IAED,MAAMC,OAAO,GAAG,MAAMf,oBAAoB,CAACU,OAAO,CAAC;IACnDM,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC;IAEhC,MAAMG,QAAQ,GAAG,MAAMlB,oBAAoB,CAACU,OAAO,CAAC;IACpD,MAAMS,MAAM,GAAGhB,aAAa,CAACe,QAAQ,CAACC,MAAM,CAAC;IAE7CH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,MAAM,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,oBACEhB,OAAA;IAAQiB,OAAO,EAAEb,iBAAkB;IAAAc,QAAA,EAAC;EAEpC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACpB,EAAA,CAzBID,oBAAoB;EAAA,QACGR,UAAU;AAAA;AAAA8B,EAAA,GADjCtB,oBAAoB;AA2B1B,eAAeA,oBAAoB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}