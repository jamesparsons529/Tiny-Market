{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\pages\\\\home.js\";\nimport React, { useState } from 'react';\nimport Mint from '../Mint';\nimport { userSession } from '../ConnectWallet'; // Assuming this is where userSession is managed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  const isUserSignedIn = userSession.isUserSignedIn(); // Check if the user is signed in\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome to the home page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isUserSignedIn ?\n        /*#__PURE__*/\n        // Display the Mint component if the user is signed in\n        _jsxDEV(Mint, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Show a message or an alternative component when not signed in\n        _jsxDEV(\"p\", {\n          children: \"Please sign in to mint an NFT.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Mint","userSession","jsxDEV","_jsxDEV","Home","isUserSignedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/pages/home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Mint from '../Mint';\r\nimport { userSession } from '../ConnectWallet'; // Assuming this is where userSession is managed\r\n\r\nfunction Home() {\r\n  const isUserSignedIn = userSession.isUserSignedIn(); // Check if the user is signed in\r\n\r\n  return (\r\n    <main>\r\n      <h1>Home</h1>\r\n      <p>Welcome to the home page</p>\r\n      <div>\r\n        <div>\r\n          {isUserSignedIn ? (\r\n            // Display the Mint component if the user is signed in\r\n            <Mint />\r\n          ) : (\r\n            // Show a message or an alternative component when not signed in\r\n            <p>Please sign in to mint an NFT.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,IAAIA,CAAA,EAAG;EACd,MAAMC,cAAc,GAAGJ,WAAW,CAACI,cAAc,CAAC,CAAC,CAAC,CAAC;;EAErD,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbP,OAAA;MAAAG,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC/BP,OAAA;MAAAG,QAAA,eACEH,OAAA;QAAAG,QAAA,EACGD,cAAc;QAAA;QACb;QACAF,OAAA,CAACH,IAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAA;QAER;QACAP,OAAA;UAAAG,QAAA,EAAG;QAA8B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACrC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACC,EAAA,GApBQP,IAAI;AAsBb,eAAeA,IAAI;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}