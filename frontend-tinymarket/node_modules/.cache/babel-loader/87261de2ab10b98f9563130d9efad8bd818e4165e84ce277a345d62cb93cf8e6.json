{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\ListingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useConnect } from \"@stacks/connect-react\";\nimport { StacksMocknet } from \"@stacks/network\";\nimport { makeContractCall, AnchorMode, principalCV, uintCV, OptionalCV, noneCV, FungibleConditionCode } from \"@stacks/transactions\";\nimport { userSession } from \"./ConnectWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListingForm = () => {\n  _s();\n  const {\n    doContractCall\n  } = useConnect();\n  const [nftAssetContract, setNftAssetContract] = useState('');\n  const [tokenId, setTokenId] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [price, setPrice] = useState('');\n  const [paymentAssetContract, setPaymentAssetContract] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Convert values to Clarity types\n    const nftAssetContractPrincipal = principalCV(nftAssetContract); // nft-asset-contract\n    const tokenIdCV = uintCV(parseInt(tokenId)); // token-id\n    const expiryCV = uintCV(parseInt(expiry)); // expiry\n    const priceCV = uintCV(parseInt(price)); // price\n    const paymentAssetContractCV = paymentAssetContract ? OptionalCV(principalCV(paymentAssetContract)) : OptionalCV(noneCV()); // optional principal for payment-asset-contract\n\n    // Construct the nft-asset object (as a tuple in Clarity)\n    const nftAssetCV = tupleCV({\n      \"taker\": OptionalCV(noneCV()),\n      // Assuming no taker is provided\n      \"token-id\": tokenIdCV,\n      \"expiry\": expiryCV,\n      \"price\": priceCV,\n      \"payment-asset-contract\": paymentAssetContractCV\n    });\n\n    // Perform contract call\n    doContractCall({\n      network: new StacksMocknet(),\n      anchorMode: AnchorMode.Any,\n      contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\",\n      // Contract address\n      contractName: \"tiny-market\",\n      // Contract name\n      functionName: \"list-asset\",\n      functionArgs: [nftAssetContractPrincipal,\n      // First argument: nft-asset-contract (principal)\n      nftAssetCV // Second argument: tuple containing the asset details\n      ],\n\n      onFinish: data => {\n        window.alert(\"Asset listed successfully!\");\n      },\n      onCancel: () => {\n        window.alert(\"Asset listing canceled.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nft-asset-contract\",\n        children: \"NFT Asset Contract Principal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nft-asset-contract\",\n        value: nftAssetContract,\n        onChange: e => setNftAssetContract(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"token-id\",\n        children: \"NFT Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"token-id\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"expiry\",\n        children: \"Expiry Block Height:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"expiry\",\n        value: expiry,\n        onChange: e => setExpiry(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"payment-asset-contract\",\n        children: \"Payment Asset Contract (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"payment-asset-contract\",\n        value: paymentAssetContract,\n        onChange: e => setPaymentAssetContract(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"List Asset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ListingForm, \"FVKrzOFsfG3MsOPX4/wf4ixo6cE=\", false, function () {\n  return [useConnect];\n});\n_c = ListingForm;\nexport default ListingForm;\nvar _c;\n$RefreshReg$(_c, \"ListingForm\");","map":{"version":3,"names":["React","useState","useConnect","StacksMocknet","makeContractCall","AnchorMode","principalCV","uintCV","OptionalCV","noneCV","FungibleConditionCode","userSession","jsxDEV","_jsxDEV","ListingForm","_s","doContractCall","nftAssetContract","setNftAssetContract","tokenId","setTokenId","expiry","setExpiry","price","setPrice","paymentAssetContract","setPaymentAssetContract","handleSubmit","e","preventDefault","nftAssetContractPrincipal","tokenIdCV","parseInt","expiryCV","priceCV","paymentAssetContractCV","nftAssetCV","tupleCV","network","anchorMode","Any","contractAddress","contractName","functionName","functionArgs","onFinish","data","window","alert","onCancel","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/ListingForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useConnect } from \"@stacks/connect-react\";\r\nimport { StacksMocknet } from \"@stacks/network\";\r\nimport {\r\n    makeContractCall,\r\n    AnchorMode,\r\n    principalCV,\r\n    uintCV,\r\n    OptionalCV,\r\n    noneCV,\r\n    FungibleConditionCode,\r\n  } from \"@stacks/transactions\";\r\nimport { userSession } from \"./ConnectWallet\";\r\n\r\nconst ListingForm = () => {\r\n  const { doContractCall } = useConnect();\r\n\r\n  const [nftAssetContract, setNftAssetContract] = useState('');\r\n  const [tokenId, setTokenId] = useState('');\r\n  const [expiry, setExpiry] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [paymentAssetContract, setPaymentAssetContract] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Convert values to Clarity types\r\n    const nftAssetContractPrincipal = principalCV(nftAssetContract); // nft-asset-contract\r\n    const tokenIdCV = uintCV(parseInt(tokenId)); // token-id\r\n    const expiryCV = uintCV(parseInt(expiry)); // expiry\r\n    const priceCV = uintCV(parseInt(price)); // price\r\n    const paymentAssetContractCV = paymentAssetContract\r\n      ? OptionalCV(principalCV(paymentAssetContract))\r\n      : OptionalCV(noneCV()); // optional principal for payment-asset-contract\r\n  \r\n    // Construct the nft-asset object (as a tuple in Clarity)\r\n    const nftAssetCV = tupleCV({\r\n      \"taker\": OptionalCV(noneCV()), // Assuming no taker is provided\r\n      \"token-id\": tokenIdCV,\r\n      \"expiry\": expiryCV,\r\n      \"price\": priceCV,\r\n      \"payment-asset-contract\": paymentAssetContractCV\r\n    });\r\n  \r\n    // Perform contract call\r\n    doContractCall({\r\n      network: new StacksMocknet(),\r\n      anchorMode: AnchorMode.Any,\r\n      contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\", // Contract address\r\n      contractName: \"tiny-market\", // Contract name\r\n      functionName: \"list-asset\",\r\n      functionArgs: [\r\n        nftAssetContractPrincipal, // First argument: nft-asset-contract (principal)\r\n        nftAssetCV // Second argument: tuple containing the asset details\r\n      ],\r\n      onFinish: (data) => {\r\n        window.alert(\"Asset listed successfully!\");\r\n      },\r\n      onCancel: () => {\r\n        window.alert(\"Asset listing canceled.\");\r\n      },\r\n    });\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"nft-asset-contract\">NFT Asset Contract Principal:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nft-asset-contract\"\r\n          value={nftAssetContract}\r\n          onChange={(e) => setNftAssetContract(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"token-id\">NFT Token ID:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"token-id\"\r\n          value={tokenId}\r\n          onChange={(e) => setTokenId(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"expiry\">Expiry Block Height:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"expiry\"\r\n          value={expiry}\r\n          onChange={(e) => setExpiry(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"price\">Price:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"payment-asset-contract\">Payment Asset Contract (optional):</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"payment-asset-contract\"\r\n          value={paymentAssetContract}\r\n          onChange={(e) => setPaymentAssetContract(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">List Asset</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ListingForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SACIC,gBAAgB,EAChBC,UAAU,EACVC,WAAW,EACXC,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,qBAAqB,QAChB,sBAAsB;AAC/B,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAe,CAAC,GAAGd,UAAU,CAAC,CAAC;EAEvC,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEpE,MAAM0B,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,yBAAyB,GAAGxB,WAAW,CAACW,gBAAgB,CAAC,CAAC,CAAC;IACjE,MAAMc,SAAS,GAAGxB,MAAM,CAACyB,QAAQ,CAACb,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,MAAMc,QAAQ,GAAG1B,MAAM,CAACyB,QAAQ,CAACX,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMa,OAAO,GAAG3B,MAAM,CAACyB,QAAQ,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,MAAMY,sBAAsB,GAAGV,oBAAoB,GAC/CjB,UAAU,CAACF,WAAW,CAACmB,oBAAoB,CAAC,CAAC,GAC7CjB,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE1B;IACA,MAAM2B,UAAU,GAAGC,OAAO,CAAC;MACzB,OAAO,EAAE7B,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC;MAAE;MAC/B,UAAU,EAAEsB,SAAS;MACrB,QAAQ,EAAEE,QAAQ;MAClB,OAAO,EAAEC,OAAO;MAChB,wBAAwB,EAAEC;IAC5B,CAAC,CAAC;;IAEF;IACAnB,cAAc,CAAC;MACbsB,OAAO,EAAE,IAAInC,aAAa,CAAC,CAAC;MAC5BoC,UAAU,EAAElC,UAAU,CAACmC,GAAG;MAC1BC,eAAe,EAAE,2CAA2C;MAAE;MAC9DC,YAAY,EAAE,aAAa;MAAE;MAC7BC,YAAY,EAAE,YAAY;MAC1BC,YAAY,EAAE,CACZd,yBAAyB;MAAE;MAC3BM,UAAU,CAAC;MAAA,CACZ;;MACDS,QAAQ,EAAGC,IAAI,IAAK;QAClBC,MAAM,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC5C,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAM;QACdF,MAAM,CAACC,KAAK,CAAC,yBAAyB,CAAC;MACzC;IACF,CAAC,CAAC;EACJ,CAAC;EAID,oBACEnC,OAAA;IAAMqC,QAAQ,EAAEvB,YAAa;IAAAwB,QAAA,gBAC3BtC,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAOuC,OAAO,EAAC,oBAAoB;QAAAD,QAAA,EAAC;MAA6B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzE3C,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,oBAAoB;QACvBC,KAAK,EAAE1C,gBAAiB;QACxB2C,QAAQ,EAAGhC,CAAC,IAAKV,mBAAmB,CAACU,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;QACrDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAOuC,OAAO,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/C3C,OAAA;QACE4C,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,UAAU;QACbC,KAAK,EAAExC,OAAQ;QACfyC,QAAQ,EAAGhC,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;QAC5CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAOuC,OAAO,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpD3C,OAAA;QACE4C,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,QAAQ;QACXC,KAAK,EAAEtC,MAAO;QACduC,QAAQ,EAAGhC,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;QAC3CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAOuC,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrC3C,OAAA;QACE4C,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,OAAO;QACVC,KAAK,EAAEpC,KAAM;QACbqC,QAAQ,EAAGhC,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAOuC,OAAO,EAAC,wBAAwB;QAAAD,QAAA,EAAC;MAAkC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClF3C,OAAA;QACE4C,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,wBAAwB;QAC3BC,KAAK,EAAElC,oBAAqB;QAC5BmC,QAAQ,EAAGhC,CAAC,IAAKF,uBAAuB,CAACE,CAAC,CAACiC,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3C,OAAA;MAAQ4C,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEX,CAAC;AAACzC,EAAA,CA/GID,WAAW;EAAA,QACYZ,UAAU;AAAA;AAAA6D,EAAA,GADjCjD,WAAW;AAiHjB,eAAeA,WAAW;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}