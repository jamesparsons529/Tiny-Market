{"ast":null,"code":"export var ClarityType;\n(function (ClarityType) {\n  ClarityType[ClarityType[\"Int\"] = 0] = \"Int\";\n  ClarityType[ClarityType[\"UInt\"] = 1] = \"UInt\";\n  ClarityType[ClarityType[\"Buffer\"] = 2] = \"Buffer\";\n  ClarityType[ClarityType[\"BoolTrue\"] = 3] = \"BoolTrue\";\n  ClarityType[ClarityType[\"BoolFalse\"] = 4] = \"BoolFalse\";\n  ClarityType[ClarityType[\"PrincipalStandard\"] = 5] = \"PrincipalStandard\";\n  ClarityType[ClarityType[\"PrincipalContract\"] = 6] = \"PrincipalContract\";\n  ClarityType[ClarityType[\"ResponseOk\"] = 7] = \"ResponseOk\";\n  ClarityType[ClarityType[\"ResponseErr\"] = 8] = \"ResponseErr\";\n  ClarityType[ClarityType[\"OptionalNone\"] = 9] = \"OptionalNone\";\n  ClarityType[ClarityType[\"OptionalSome\"] = 10] = \"OptionalSome\";\n  ClarityType[ClarityType[\"List\"] = 11] = \"List\";\n  ClarityType[ClarityType[\"Tuple\"] = 12] = \"Tuple\";\n  ClarityType[ClarityType[\"StringASCII\"] = 13] = \"StringASCII\";\n  ClarityType[ClarityType[\"StringUTF8\"] = 14] = \"StringUTF8\";\n})(ClarityType || (ClarityType = {}));","map":{"version":3,"names":["ClarityType"],"sources":["C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\node_modules\\@stacks\\transactions\\src\\clarity\\constants.ts"],"sourcesContent":["/**\r\n * Type IDs corresponding to each of the Clarity value types as described here:\r\n * {@link https://github.com/blockstack/blockstack-core/blob/sip/sip-005/sip/sip-005-blocks-and-transactions.md#clarity-value-representation}\r\n */\r\nexport enum ClarityType {\r\n  Int = 0x00,\r\n  UInt = 0x01,\r\n  Buffer = 0x02,\r\n  BoolTrue = 0x03,\r\n  BoolFalse = 0x04,\r\n  PrincipalStandard = 0x05,\r\n  PrincipalContract = 0x06,\r\n  ResponseOk = 0x07,\r\n  ResponseErr = 0x08,\r\n  OptionalNone = 0x09,\r\n  OptionalSome = 0x0a,\r\n  List = 0x0b,\r\n  Tuple = 0x0c,\r\n  StringASCII = 0x0d,\r\n  StringUTF8 = 0x0e,\r\n}\r\n"],"mappings":"AAIA,WAAYA,WAgBX;AAhBD,WAAYA,WAAW;EACrBA,WAAA,CAAAA,WAAA,oBAAU;EACVA,WAAA,CAAAA,WAAA,sBAAW;EACXA,WAAA,CAAAA,WAAA,0BAAa;EACbA,WAAA,CAAAA,WAAA,8BAAe;EACfA,WAAA,CAAAA,WAAA,gCAAgB;EAChBA,WAAA,CAAAA,WAAA,gDAAwB;EACxBA,WAAA,CAAAA,WAAA,gDAAwB;EACxBA,WAAA,CAAAA,WAAA,kCAAiB;EACjBA,WAAA,CAAAA,WAAA,oCAAkB;EAClBA,WAAA,CAAAA,WAAA,sCAAmB;EACnBA,WAAA,CAAAA,WAAA,uCAAmB;EACnBA,WAAA,CAAAA,WAAA,uBAAW;EACXA,WAAA,CAAAA,WAAA,yBAAY;EACZA,WAAA,CAAAA,WAAA,qCAAkB;EAClBA,WAAA,CAAAA,WAAA,mCAAiB;AACnB,CAAC,EAhBWA,WAAW,KAAXA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}