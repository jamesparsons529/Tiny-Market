{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\pages\\\\FetchLastTokenIdButton.js\";\nimport React from 'react';\nimport { callReadOnlyFunction } from '@stacks/transactions';\nimport { StacksMocknet } from '@stacks/network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\";\nconst contractName = \"sip009-nft\";\nconst FetchLastTokenIdButton = () => {\n  const handleClick = async () => {\n    const network = new StacksMocknet();\n    const options = {\n      contractAddress,\n      contractName,\n      functionName: \"get-last-token-id\",\n      network,\n      functionArgs: []\n    };\n    console.log(\"Options for callReadOnlyFunction:\", options);\n    try {\n      const result = await callReadOnlyFunction(options);\n      console.log(\"Last token ID result:\", result);\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error response data:\", error.response.data);\n        console.error(\"Error response status:\", error.response.status);\n        console.error(\"Error response headers:\", error.response.headers);\n      } else {\n        console.error(\"Error message:\", error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleClick(),\n    children: \"Fetch Last Token ID\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = FetchLastTokenIdButton;\nexport default FetchLastTokenIdButton;\nvar _c;\n$RefreshReg$(_c, \"FetchLastTokenIdButton\");","map":{"version":3,"names":["React","callReadOnlyFunction","StacksMocknet","jsxDEV","_jsxDEV","contractAddress","contractName","FetchLastTokenIdButton","handleClick","network","options","functionName","functionArgs","console","log","result","error","response","data","status","headers","message","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/pages/FetchLastTokenIdButton.js"],"sourcesContent":["import React from 'react';\r\nimport { callReadOnlyFunction } from '@stacks/transactions';\r\nimport { StacksMocknet } from '@stacks/network';\r\n\r\nconst contractAddress = \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\";\r\nconst contractName = \"sip009-nft\";\r\n\r\nconst FetchLastTokenIdButton = () => {\r\n  const handleClick = async () => {\r\n    const network = new StacksMocknet();\r\n    \r\n    const options = {\r\n      contractAddress,\r\n      contractName,\r\n      functionName: \"get-last-token-id\",\r\n      network,\r\n      functionArgs: [],\r\n    };\r\n\r\n    console.log(\"Options for callReadOnlyFunction:\", options);\r\n\r\n    try {\r\n      const result = await callReadOnlyFunction(options);\r\n      console.log(\"Last token ID result:\", result);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error(\"Error response data:\", error.response.data);\r\n        console.error(\"Error response status:\", error.response.status);\r\n        console.error(\"Error response headers:\", error.response.headers);\r\n      } else {\r\n        console.error(\"Error message:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={() => handleClick()}>\r\n      Fetch Last Token ID\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FetchLastTokenIdButton;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAG,2CAA2C;AACnE,MAAMC,YAAY,GAAG,YAAY;AAEjC,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,OAAO,GAAG,IAAIP,aAAa,CAAC,CAAC;IAEnC,MAAMQ,OAAO,GAAG;MACdL,eAAe;MACfC,YAAY;MACZK,YAAY,EAAE,mBAAmB;MACjCF,OAAO;MACPG,YAAY,EAAE;IAChB,CAAC;IAEDC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,OAAO,CAAC;IAEzD,IAAI;MACF,MAAMK,MAAM,GAAG,MAAMd,oBAAoB,CAACS,OAAO,CAAC;MAClDG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,MAAM,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAClBJ,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;QAC1DL,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACC,QAAQ,CAACE,MAAM,CAAC;QAC9DN,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,QAAQ,CAACG,OAAO,CAAC;MAClE,CAAC,MAAM;QACLP,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACK,OAAO,CAAC;MAChD;IACF;EACF,CAAC;EAED,oBACEjB,OAAA;IAAQkB,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,CAAE;IAAAe,QAAA,EAAC;EAEtC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GAjCIrB,sBAAsB;AAmC5B,eAAeA,sBAAsB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}