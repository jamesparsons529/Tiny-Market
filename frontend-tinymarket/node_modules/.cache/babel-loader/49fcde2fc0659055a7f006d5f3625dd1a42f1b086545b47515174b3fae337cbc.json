{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elliott\\\\Tiny-Market\\\\frontend-tinymarket\\\\src\\\\components\\\\ListingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useConnect } from \"@stacks/connect-react\";\nimport { StacksMocknet } from \"@stacks/network\";\nimport { AnchorMode, principalCV, uintCV, tupleCV, FungibleConditionCode, makeStandardSTXPostCondition } from \"@stacks/transactions\";\nimport { userSession } from \"./ConnectWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListingForm = () => {\n  _s();\n  const {\n    doContractCall\n  } = useConnect();\n  const nftAssetContractRef = useRef(null);\n  const tokenIdRef = useRef(null);\n  const expiryRef = useRef(null);\n  const priceRef = useRef(null);\n  const postConditionAddress = userSession.loadUserData().profile.stxAddress.testnet;\n  const postConditionCode = FungibleConditionCode.LessEqual;\n  const postConditionAmount = 50 * 1000000;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const nftAssetContract = nftAssetContractRef.current.value;\n    const tokenId = tokenIdRef.current.value;\n    const expiry = expiryRef.current.value;\n    const price = priceRef.current.value;\n\n    // Basic validation\n    if (!nftAssetContract || !tokenId || !expiry || !price) {\n      window.alert(\"Please fill in all fields.\");\n      return;\n    }\n    doContractCall({\n      network: new StacksMocknet(),\n      anchorMode: AnchorMode.Any,\n      contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\",\n      // Contract address\n      contractName: \"tiny-market\",\n      // Contract name\n      functionName: \"list-asset\",\n      functionArgs: [principalCV(nftAssetContract),\n      // NFT asset contract principal\n      tupleCV({\n        'token-id': uintCV(parseInt(tokenId)),\n        'expiry': uintCV(parseInt(expiry)),\n        'price': uintCV(parseInt(price))\n      })],\n      onFinish: data => {\n        window.alert(\"Asset listed successfully!\");\n        // Clear the input fields\n        nftAssetContractRef.current.value = '';\n        tokenIdRef.current.value = '';\n        expiryRef.current.value = '';\n        priceRef.current.value = '';\n      },\n      onCancel: () => {\n        console.log(\"onCancel:\", \"Transaction was canceled\");\n        window.alert(\"Asset listing failed.\");\n      },\n      onError: error => {\n        // Log and handle errors\n        console.error(\"Error during contract call:\", error);\n        window.alert(\"An error occurred while listing the asset. Please try again.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nft-asset-contract\",\n        children: \"NFT Asset Contract Principal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nft-asset-contract\",\n        value: nftAssetContract,\n        onChange: e => setNftAssetContract(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"token-id\",\n        children: \"NFT Token ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"token-id\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"expiry\",\n        children: \"Expiry Block Height:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"expiry\",\n        value: expiry,\n        onChange: e => setExpiry(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"List Asset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ListingForm, \"T0pqnYZO8OUMleGWTfH/1w977eM=\", false, function () {\n  return [useConnect];\n});\n_c = ListingForm;\nexport default ListingForm;\nvar _c;\n$RefreshReg$(_c, \"ListingForm\");","map":{"version":3,"names":["React","useState","useRef","useConnect","StacksMocknet","AnchorMode","principalCV","uintCV","tupleCV","FungibleConditionCode","makeStandardSTXPostCondition","userSession","jsxDEV","_jsxDEV","ListingForm","_s","doContractCall","nftAssetContractRef","tokenIdRef","expiryRef","priceRef","postConditionAddress","loadUserData","profile","stxAddress","testnet","postConditionCode","LessEqual","postConditionAmount","handleSubmit","e","preventDefault","nftAssetContract","current","value","tokenId","expiry","price","window","alert","network","anchorMode","Any","contractAddress","contractName","functionName","functionArgs","parseInt","onFinish","data","onCancel","console","log","onError","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","setNftAssetContract","target","required","setTokenId","setExpiry","setPrice","_c","$RefreshReg$"],"sources":["C:/Users/Elliott/Tiny-Market/frontend-tinymarket/src/components/ListingForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useConnect } from \"@stacks/connect-react\";\r\nimport { StacksMocknet } from \"@stacks/network\";\r\nimport { \r\n  AnchorMode, \r\n  principalCV, \r\n  uintCV, \r\n  tupleCV, \r\n  FungibleConditionCode,\r\n  makeStandardSTXPostCondition } from \"@stacks/transactions\";\r\nimport { userSession } from \"./ConnectWallet\";\r\n\r\nconst ListingForm = () => {\r\n  const { doContractCall } = useConnect();\r\n\r\n  const nftAssetContractRef = useRef(null);\r\n  const tokenIdRef = useRef(null);\r\n  const expiryRef = useRef(null);\r\n  const priceRef = useRef(null);\r\n\r\n  const postConditionAddress = userSession.loadUserData().profile.stxAddress.testnet;\r\n  const postConditionCode = FungibleConditionCode.LessEqual;\r\n  const postConditionAmount = 50 * 1000000;\r\n\r\n  const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      const nftAssetContract = nftAssetContractRef.current.value;\r\n      const tokenId = tokenIdRef.current.value;\r\n      const expiry = expiryRef.current.value;\r\n      const price = priceRef.current.value;\r\n\r\n      // Basic validation\r\n      if (!nftAssetContract || !tokenId || !expiry || !price) {\r\n        window.alert(\"Please fill in all fields.\");\r\n        return;\r\n      }\r\n\r\n      doContractCall({\r\n      network: new StacksMocknet(),\r\n      anchorMode: AnchorMode.Any,\r\n      contractAddress: \"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\", // Contract address\r\n      contractName: \"tiny-market\", // Contract name\r\n      functionName: \"list-asset\",\r\n      functionArgs: [\r\n        principalCV(nftAssetContract), // NFT asset contract principal\r\n        tupleCV({\r\n          'token-id': uintCV(parseInt(tokenId)),\r\n          'expiry': uintCV(parseInt(expiry)),\r\n          'price': uintCV(parseInt(price)),\r\n        }),\r\n      ],\r\n      onFinish: (data) => {\r\n        window.alert(\"Asset listed successfully!\");\r\n        // Clear the input fields\r\n        nftAssetContractRef.current.value = '';\r\n        tokenIdRef.current.value = '';\r\n        expiryRef.current.value = '';\r\n        priceRef.current.value = '';\r\n      },\r\n      onCancel: () => {\r\n        console.log(\"onCancel:\", \"Transaction was canceled\");\r\n        window.alert(\"Asset listing failed.\");\r\n      },\r\n      onError: (error) => {\r\n        // Log and handle errors\r\n        console.error(\"Error during contract call:\", error);\r\n        window.alert(\"An error occurred while listing the asset. Please try again.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"nft-asset-contract\">NFT Asset Contract Principal:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nft-asset-contract\"\r\n          value={nftAssetContract}\r\n          onChange={(e) => setNftAssetContract(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"token-id\">NFT Token ID:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"token-id\"\r\n          value={tokenId}\r\n          onChange={(e) => setTokenId(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"expiry\">Expiry Block Height:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"expiry\"\r\n          value={expiry}\r\n          onChange={(e) => setExpiry(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"price\">Price:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">List Asset</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ListingForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}