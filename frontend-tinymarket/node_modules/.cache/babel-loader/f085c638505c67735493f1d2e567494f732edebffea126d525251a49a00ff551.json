{"ast":null,"code":"import { utils } from '@noble/secp256k1';\nexport const randomBytes = (bytesLength = 32) => utils.randomBytes(bytesLength);","map":{"version":3,"names":["utils","randomBytes","bytesLength"],"sources":["C:\\Users\\user\\Documents\\Tiny-Market\\frontend-tinymarket\\node_modules\\@stacks\\encryption\\src\\cryptoRandom.ts"],"sourcesContent":["import { utils } from '@noble/secp256k1';\r\n\r\n/**\r\n * Reexports @noble/secp256k1's randombytes\r\n * Generates bytes with random bytes of given length\r\n * @param bytesLength an optional bytes length, default `32` bytes\r\n * @return {Uint8Array} random bytes\r\n */\r\nexport const randomBytes = (bytesLength: number = 32): Uint8Array => utils.randomBytes(bytesLength);\r\n\r\n/** Optional function to generate cryptographically secure random bytes */\r\nexport type GetRandomBytes = (count: number) => Uint8Array;\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AAQxC,OAAO,MAAMC,WAAW,GAAGA,CAACC,WAAA,GAAsB,EAAE,KAAiBF,KAAK,CAACC,WAAW,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}