{"ast":null,"code":"import { ClarityType } from '../constants';\nconst trueCV = () => ({\n  type: ClarityType.BoolTrue\n});\nconst falseCV = () => ({\n  type: ClarityType.BoolFalse\n});\nconst boolCV = bool => bool ? trueCV() : falseCV();\nexport { boolCV, trueCV, falseCV };","map":{"version":3,"names":["ClarityType","trueCV","type","BoolTrue","falseCV","BoolFalse","boolCV","bool"],"sources":["C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\node_modules\\@stacks\\transactions\\src\\clarity\\types\\booleanCV.ts"],"sourcesContent":["import { ClarityType } from '../constants';\r\n\r\ntype BooleanCV = TrueCV | FalseCV;\r\n\r\ninterface TrueCV {\r\n  type: ClarityType.BoolTrue;\r\n}\r\n\r\ninterface FalseCV {\r\n  type: ClarityType.BoolFalse;\r\n}\r\n\r\n/**\r\n * Converts true to BooleanCV clarity type\r\n *\r\n * @returns {BooleanCV} returns instance of type BooleanCV\r\n *\r\n * @example\r\n * ```\r\n *  import { trueCV } from '@stacks/transactions';\r\n *\r\n *  const trueCV = trueCV();\r\n *  // { type: 3 }\r\n * ```\r\n *\r\n * @see\r\n * {@link https://github.com/hirosystems/stacks.js/blob/main/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\r\n */\r\nconst trueCV = (): BooleanCV => ({ type: ClarityType.BoolTrue });\r\n\r\n/**\r\n * Converts false to BooleanCV clarity type\r\n *\r\n * @returns {BooleanCV} returns instance of type BooleanCV\r\n *\r\n * @example\r\n * ```\r\n *  import { falseCV } from '@stacks/transactions';\r\n *\r\n *  const falseCV = falseCV();\r\n *  // { type: 4 }\r\n * ```\r\n *\r\n * @see\r\n * {@link https://github.com/hirosystems/stacks.js/blob/main/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\r\n */\r\nconst falseCV = (): BooleanCV => ({ type: ClarityType.BoolFalse });\r\n\r\n/**\r\n * Converts a boolean to BooleanCV clarity type\r\n *\r\n * @returns {BooleanCV} returns instance of type BooleanCV\r\n *\r\n * @example\r\n * ```\r\n *  import { boolCV } from '@stacks/transactions';\r\n *\r\n *  const boolCV = boolCV(false);\r\n *  // { type: 4 }\r\n * ```\r\n *\r\n * @see\r\n * {@link https://github.com/hirosystems/stacks.js/blob/main/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\r\n */\r\nconst boolCV = (bool: boolean) => (bool ? trueCV() : falseCV());\r\n\r\nexport { BooleanCV, TrueCV, FalseCV, boolCV, trueCV, falseCV };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AA4B1C,MAAMC,MAAM,GAAGA,CAAA,MAAkB;EAAEC,IAAI,EAAEF,WAAW,CAACG;AAAQ,CAAE,CAAC;AAkBhE,MAAMC,OAAO,GAAGA,CAAA,MAAkB;EAAEF,IAAI,EAAEF,WAAW,CAACK;AAAS,CAAE,CAAC;AAkBlE,MAAMC,MAAM,GAAIC,IAAa,IAAMA,IAAI,GAAGN,MAAM,EAAE,GAAGG,OAAO,EAAG;AAE/D,SAAqCE,MAAM,EAAEL,MAAM,EAAEG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}