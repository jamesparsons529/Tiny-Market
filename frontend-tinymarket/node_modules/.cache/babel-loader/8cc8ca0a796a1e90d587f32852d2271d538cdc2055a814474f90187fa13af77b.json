{"ast":null,"code":"/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => word << 32 - shift | word >>> shift;\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({\n  length: 256\n}, (v, i) => i.toString(16).padStart(2, '0'));\n/**\r\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\r\n */\nexport function bytesToHex(uint8a) {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n/**\r\n * @example hexToBytes('deadbeef')\r\n */\nexport function hexToBytes(hex) {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\nexport function utf8ToBytes(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n/**\r\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\r\n * @example concatBytes(buf1, buf2)\r\n */\nexport function concatBytes(...arrays) {\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts))) throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n  const hashC = message => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({});\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = opts => hashCons(opts);\n  return hashC;\n}\n/**\r\n * Secure PRNG\r\n */\nexport function randomBytes(bytesLength = 32) {\n  if (crypto.web) {\n    return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto.node) {\n    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}","map":{"version":3,"names":["crypto","u8","arr","Uint8Array","buffer","byteOffset","byteLength","u32","Uint32Array","Math","floor","createView","DataView","rotr","word","shift","isLE","Error","hexes","Array","from","length","v","i","toString","padStart","bytesToHex","uint8a","hex","hexToBytes","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nextTick","asyncLoop","iters","tick","cb","ts","Date","now","diff","utf8ToBytes","str","TextEncoder","encode","toBytes","data","concatBytes","arrays","every","a","reduce","result","pad","set","Hash","clone","_cloneInto","isPlainObject","obj","Object","prototype","call","constructor","checkOpts","defaults","opts","undefined","merged","assign","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","outputLen","blockLen","create","wrapConstructorWithOpts","hashCons","msg","randomBytes","bytesLength","web","getRandomValues","node"],"sources":["C:/Users/user/Documents/Tiny-Market/frontend-tinymarket/node_modules/@noble/hashes/esm/utils.js"],"sourcesContent":["/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\r\n// The import here is via the package name. This is to ensure\r\n// that exports mapping/resolution does fall into place.\r\nimport { crypto } from '@noble/hashes/crypto';\r\n// Cast array to different type\r\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\r\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\r\n// Cast array to view\r\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\r\n// The rotate right (circular right shift) operation for uint32\r\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\r\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\r\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\r\n// So, just to be sure not to corrupt anything.\r\nif (!isLE)\r\n    throw new Error('Non little-endian hardware is not supported');\r\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\r\n/**\r\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\r\n */\r\nexport function bytesToHex(uint8a) {\r\n    // pre-caching improves the speed 6x\r\n    if (!(uint8a instanceof Uint8Array))\r\n        throw new Error('Uint8Array expected');\r\n    let hex = '';\r\n    for (let i = 0; i < uint8a.length; i++) {\r\n        hex += hexes[uint8a[i]];\r\n    }\r\n    return hex;\r\n}\r\n/**\r\n * @example hexToBytes('deadbeef')\r\n */\r\nexport function hexToBytes(hex) {\r\n    if (typeof hex !== 'string') {\r\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\r\n    }\r\n    if (hex.length % 2)\r\n        throw new Error('hexToBytes: received invalid unpadded hex');\r\n    const array = new Uint8Array(hex.length / 2);\r\n    for (let i = 0; i < array.length; i++) {\r\n        const j = i * 2;\r\n        const hexByte = hex.slice(j, j + 2);\r\n        const byte = Number.parseInt(hexByte, 16);\r\n        if (Number.isNaN(byte) || byte < 0)\r\n            throw new Error('Invalid byte sequence');\r\n        array[i] = byte;\r\n    }\r\n    return array;\r\n}\r\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\r\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\r\nexport const nextTick = async () => { };\r\n// Returns control to thread each 'tick' ms to avoid blocking\r\nexport async function asyncLoop(iters, tick, cb) {\r\n    let ts = Date.now();\r\n    for (let i = 0; i < iters; i++) {\r\n        cb(i);\r\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\r\n        const diff = Date.now() - ts;\r\n        if (diff >= 0 && diff < tick)\r\n            continue;\r\n        await nextTick();\r\n        ts += diff;\r\n    }\r\n}\r\nexport function utf8ToBytes(str) {\r\n    if (typeof str !== 'string') {\r\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\r\n    }\r\n    return new TextEncoder().encode(str);\r\n}\r\nexport function toBytes(data) {\r\n    if (typeof data === 'string')\r\n        data = utf8ToBytes(data);\r\n    if (!(data instanceof Uint8Array))\r\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\r\n    return data;\r\n}\r\n/**\r\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\r\n * @example concatBytes(buf1, buf2)\r\n */\r\nexport function concatBytes(...arrays) {\r\n    if (!arrays.every((a) => a instanceof Uint8Array))\r\n        throw new Error('Uint8Array list expected');\r\n    if (arrays.length === 1)\r\n        return arrays[0];\r\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\r\n    const result = new Uint8Array(length);\r\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\r\n        const arr = arrays[i];\r\n        result.set(arr, pad);\r\n        pad += arr.length;\r\n    }\r\n    return result;\r\n}\r\n// For runtime check if class implements interface\r\nexport class Hash {\r\n    // Safe version that clones internal state\r\n    clone() {\r\n        return this._cloneInto();\r\n    }\r\n}\r\n// Check if object doens't have custom constructor (like Uint8Array/Array)\r\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\r\nexport function checkOpts(defaults, opts) {\r\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\r\n        throw new TypeError('Options should be object or undefined');\r\n    const merged = Object.assign(defaults, opts);\r\n    return merged;\r\n}\r\nexport function wrapConstructor(hashConstructor) {\r\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\r\n    const tmp = hashConstructor();\r\n    hashC.outputLen = tmp.outputLen;\r\n    hashC.blockLen = tmp.blockLen;\r\n    hashC.create = () => hashConstructor();\r\n    return hashC;\r\n}\r\nexport function wrapConstructorWithOpts(hashCons) {\r\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\r\n    const tmp = hashCons({});\r\n    hashC.outputLen = tmp.outputLen;\r\n    hashC.blockLen = tmp.blockLen;\r\n    hashC.create = (opts) => hashCons(opts);\r\n    return hashC;\r\n}\r\n/**\r\n * Secure PRNG\r\n */\r\nexport function randomBytes(bytesLength = 32) {\r\n    if (crypto.web) {\r\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\r\n    }\r\n    else if (crypto.node) {\r\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\r\n    }\r\n    else {\r\n        throw new Error(\"The environment doesn't have randomBytes function\");\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}