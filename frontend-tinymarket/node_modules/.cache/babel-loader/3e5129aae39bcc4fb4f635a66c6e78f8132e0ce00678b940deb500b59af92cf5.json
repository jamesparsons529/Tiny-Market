{"ast":null,"code":"import { utf8ToBytes } from '@stacks/common';\nimport { ClarityType } from '../constants';\nconst bufferCV = buffer => {\n  if (buffer.length > 1000000) {\n    throw new Error('Cannot construct clarity buffer that is greater than 1MB');\n  }\n  return {\n    type: ClarityType.Buffer,\n    buffer\n  };\n};\nconst bufferCVFromString = str => bufferCV(utf8ToBytes(str));\nexport { bufferCV, bufferCVFromString };","map":{"version":3,"names":["utf8ToBytes","ClarityType","bufferCV","buffer","length","Error","type","Buffer","bufferCVFromString","str"],"sources":["C:\\Users\\Elliott\\Tiny-Market\\frontend-tinymarket\\node_modules\\@stacks\\transactions\\src\\clarity\\types\\bufferCV.ts"],"sourcesContent":["import { utf8ToBytes } from '@stacks/common';\r\nimport { ClarityType } from '../constants';\r\n\r\ninterface BufferCV {\r\n  readonly type: ClarityType.Buffer;\r\n  readonly buffer: Uint8Array;\r\n}\r\n\r\n/**\r\n * Converts a Uint8Array to a BufferCV clarity type\r\n *\r\n * @param {Uint8Array} buffer value to be converted to clarity type\r\n *\r\n * @returns {BufferCV} returns instance of type BufferCV\r\n *\r\n * @example\r\n * ```\r\n *  import { bufferCV } from '@stacks/transactions';\r\n *\r\n *  const buffer = utf8ToBytes('this is a test');\r\n *  const buf = bufferCV(buffer);\r\n *  // { type: 2, buffer: <Uint8Array 74 68 69 73 20 69 73 20 61 20 74 65 73 74> }\r\n *  const value = bytesToUtf8(buf.buffer);\r\n *  // this is a test\r\n * ```\r\n *\r\n * @see\r\n * {@link https://github.com/hirosystems/stacks.js/blob/main/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\r\n */\r\nconst bufferCV = (buffer: Uint8Array): BufferCV => {\r\n  if (buffer.length > 1_000_000) {\r\n    throw new Error('Cannot construct clarity buffer that is greater than 1MB');\r\n  }\r\n\r\n  return { type: ClarityType.Buffer, buffer };\r\n};\r\n\r\n/**\r\n * Converts a string to BufferCV clarity type\r\n *\r\n * @param {str} string input to be converted to bufferCV clarity type\r\n *\r\n * @returns {BufferCV} returns instance of type BufferCV\r\n *\r\n * @example\r\n * ```\r\n *  import { bufferCVFromString } from '@stacks/transactions';\r\n *\r\n *  const str = 'this is a test';\r\n *  const buf = bufferCVFromString(str);\r\n *  // { type: 2, buffer: <Buffer 74 68 69 73 20 69 73 20 61 20 74 65 73 74> }\r\n *  const value = bytesToUtf8(buf.buffer);\r\n *  // this is a test\r\n *```\r\n *\r\n * @see\r\n * {@link https://github.com/hirosystems/stacks.js/blob/main/packages/transactions/tests/clarity.test.ts | clarity test cases for more examples}\r\n */\r\nconst bufferCVFromString = (str: string): BufferCV => bufferCV(utf8ToBytes(str));\r\n\r\nexport { BufferCV, bufferCV, bufferCVFromString };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,cAAc;AA4B1C,MAAMC,QAAQ,GAAIC,MAAkB,IAAc;EAChD,IAAIA,MAAM,CAACC,MAAM,GAAG,OAAS,EAAE;IAC7B,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;;EAG7E,OAAO;IAAEC,IAAI,EAAEL,WAAW,CAACM,MAAM;IAAEJ;EAAM,CAAE;AAC7C,CAAC;AAuBD,MAAMK,kBAAkB,GAAIC,GAAW,IAAeP,QAAQ,CAACF,WAAW,CAACS,GAAG,CAAC,CAAC;AAEhF,SAAmBP,QAAQ,EAAEM,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}