import { getGlobalObject, bytesToHex, cleanHex, hexToJSON, ChainID, concatByteArrays, writeUInt8, writeUInt16LE, writeUInt32LE, hexToBigInt, ensureUint8Array, readUInt8, readUInt16LE, readUInt32LE } from 'micro-stacks/common';
import { getPublicKey, decodeToken, decryptECIES, getRandomBytes, TokenSigner, createUnsecuredToken, c32addressDecode, publicKeyToStxAddress } from 'micro-stacks/crypto';
import { cvToHex, tupleCV, stringAsciiCV, uintCV } from 'micro-stacks/clarity';
import { serializePostCondition } from 'micro-stacks/transactions';
import '@noble/hashes/sha256';
import { hashSha256 } from 'micro-stacks/crypto-sha';
import { utf8ToBytes } from '@noble/hashes/utils';
import { recoverPublicKey, Signature, verify } from '@noble/secp256k1';

var f=typeof document<"u",_=(r=>(r.SessionStorageKey="stacks-session",r.NetworkStorageKey="stacks-network",r))(_||{});var d=getGlobalObject("localStorage",{returnEmptyObject:!0}),C={setItem:(e,t)=>{if(f)return d==null?void 0:d.setItem(e,t)},getItem:e=>{if(f){let t=d==null?void 0:d.getItem(e);if(t===null)throw new Error("defaultStorageAdapter: no value stored");return t}},removeItem:e=>{if(f)return d==null?void 0:d.removeItem(e)}},c=e=>e?bytesToHex(getPublicKey(e,!0)):null;function A(e){return e==null?void 0:e.map(t=>typeof t!="string"?bytesToHex(serializePostCondition(t)):t)}var u=(e,t)=>t?new TokenSigner("ES256k",t).sign(e):createUnsecuredToken(e);var l=async(e,t)=>{let r={...e,postConditions:A(e.postConditions)};return u(r,t)};var Q=(n=>(n.ContractCall="contract_call",n.ContractDeploy="smart_contract",n.STXTransfer="token_transfer",n))(Q||{});async function it({functionArgs:e,privateKey:t,...r}){let n=c(t),o={...r,functionArgs:e.map(s=>cleanHex(typeof s=="string"?s:cvToHex(s))),txType:"contract_call",publicKey:n};return l(o,t)}async function lt({privateKey:e,...t}){let r={...t,publicKey:c(e),txType:"smart_contract"};return l(r,e)}async function ft({privateKey:e,...t}){let r={...t,amount:typeof t.amount=="bigint"?Number(t.amount).toString(10):t.amount,publicKey:c(e),txType:"token_transfer"};return l(r,e)}function oe(e){let t=e.split(":");if(t.length!==3)throw new TypeError("Decentralized IDs must have 3 parts");if(t[0].toLowerCase()!=="did")throw new TypeError('Decentralized IDs must start with "did"');return t[1].toLowerCase()}function se(e){return e&&oe(e)==="btc-addr"?e.split(":")[2]:void 0}async function D(e,t){let r=decodeToken(e),o=r==null?void 0:r.payload,s;if(o.private_key)try{let i=hexToJSON(o.private_key);s=await decryptECIES({privateKey:t,cipherObject:i});}catch{console.error("[micro-stacks] failed to decrypt appPrivateKey");}return {addresses:o.profile.stxAddress,appPrivateKey:s,associationToken:o.associationToken,hubUrl:o.hubUrl,public_keys:o.public_keys,profile:o.profile,profile_url:o.profile_url,username:o.username,version:o.version,decentralizedID:o.iss,identityAddress:se(o.iss)}}function y(){return getGlobalObject("StacksProvider",{returnEmptyObject:!1,usageDesc:"authenticate",throwIfUnavailable:!0})}async function At(e,t=C,r=JSON.stringify){var n,o;if(!e.appDetails)throw Error("[micro-stacks] authenticate error: `authOptions.appDetails` are required for authentication");try{let s=bytesToHex(getRandomBytes()),a=await ge(e,s),i=await D(a,s);return (n=e==null?void 0:e.onFinish)==null||n.call(e,i),t.setItem("stacks-session",r(i)),i}catch(s){(o=e==null?void 0:e.onCancel)==null||o.call(e,s.message);}}function le(e,t){if(!e.appDetails)throw Error("[micro-stacks] authenticate error: `authOptions.appDetails` are required for authentication");let r=e.scopes||[],n=getGlobalObject("location",{returnEmptyObject:!0}).origin;return {scopes:[...new Set(["store_write",...r])],redirect_uri:n,public_keys:[t],domain_name:n,appDetails:e.appDetails}}async function me(e,t){return new TokenSigner("ES256k",t).sign(e)}async function pe(e,t){let r=bytesToHex(getPublicKey(t)),n=le(e,r);return me(n,t)}async function ge(e,t){let r=y();if(!r)throw Error("This function can only be called on the client, and with the presence of StacksProvider");let n=await pe(e,t);return r.authenticationRequest(n)}function p(e){return async function(r){let{token:n,onFinish:o,onCancel:s}=r;try{let a=y();if(!a)throw new Error("[micro-stacks/connect] No Stacks provider");let i=a[e];if(typeof i!="function")throw new Error(`[micro-stacks/connect] StacksProvider method ${e} not found`);let g=await i(n);o==null||o(g);}catch(a){s==null||s(a==null?void 0:a.message);}}}var Mt=p("transactionRequest"),O=p("signatureRequest"),R=p("structuredDataSignatureRequest");var M=(o=>(o.Chrome="https://chrome.google.com/webstore/detail/hiro-wallet/ldinpeekobnhjjdofggfgjlcehhmanlj",o.Firefox="https://addons.mozilla.org/en-US/firefox/addon/hiro-wallet/",o.Mobile="https://www.xverse.app",o.Browser="https://www.hiro.so/wallet/install-web",o))(M||{});function fe(){if(typeof document>"u")return;let e=!!window.chrome,t=window.navigator,r=t.vendor,n=typeof window.opr<"u",o=t.userAgent.includes("Edge");return /CriOS/.exec(t.userAgent)?!1:e!==null&&typeof e<"u"&&r==="Google Inc."&&!n&&!o}function E(){if(typeof document===void 0)return;let e=navigator.userAgent;return /(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(e)?!0:/Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(e)}function ye(){return typeof document>"u"?null:E()?"Mobile":fe()?"Chrome":window.navigator.userAgent.includes("Firefox")?"Firefox":"Browser"}function xe(e){switch(e){case"Chrome":return "https://chrome.google.com/webstore/detail/hiro-wallet/ldinpeekobnhjjdofggfgjlcehhmanlj";case"Firefox":return "https://addons.mozilla.org/en-US/firefox/addon/hiro-wallet/";case"Mobile":return "https://www.xverse.app";default:return "https://www.hiro.so/wallet/install-web"}}var K=async e=>{let t={stxAddress:e.stxAddress,message:e.message,appDetails:e.appDetails??null,publicKey:c(e.privateKey),network:e.network};return u(t,e.privateKey)},Se=async e=>{try{let t=await K({message:e.message,privateKey:e.privateKey,stxAddress:e.stxAddress,authOrigin:e.authOrigin,appDetails:e.appDetails});return O({token:t,onFinish:e.onFinish,onCancel:e.onCancel})}catch(t){console.error("[micro-stacks] handleSignMessageRequest failed"),console.error(t);}};var be=(e,t,r)=>tupleCV({name:stringAsciiCV(e),version:stringAsciiCV(t),"chain-id":uintCV(r)});var F=async e=>{var s;let t=typeof e.message!="string"?cvToHex(e.message):e.message,r=be(e.domain.name,e.domain.version,e.domain.chainId??((s=e.network)==null?void 0:s.chainId)??ChainID.Mainnet),n=cvToHex(r),o={stxAddress:e.stxAddress,message:cleanHex(t),domain:cleanHex(n),appDetails:e.appDetails,publicKey:c(e.privateKey),network:e.network};return u(o,e==null?void 0:e.privateKey)},ve=async e=>{try{let t=await F({message:e.message,domain:e.domain,privateKey:e.privateKey,stxAddress:e.stxAddress,authOrigin:e.authOrigin,appDetails:e.appDetails,network:e.network});return R({token:t,onFinish:e.onFinish,onCancel:e.onCancel})}catch(t){console.error("[micro-stacks] handleSignStructuredDataRequest failed"),console.error(t);}};var Ae=9007199254740991;function k(e){if(e<0||e>Ae||e%1!==0)throw new RangeError("value out of range")}var T=(e,t,r)=>{k(e);let n;if(t||(t=new Uint8Array(b(e))),!ensureUint8Array(t))throw new TypeError("uint8Array must be of Uint8Array type");return r||(r=0),e<253?(writeUInt8(t,e,r),n=1):e<=65535?(writeUInt8(t,253,r),writeUInt16LE(t,e,r+1),n=3):e<=4294967295?(writeUInt8(t,254,r),writeUInt32LE(t,e,r+1),n=5):(writeUInt8(t,255,r),writeUInt32LE(t,e>>>0,r+1),writeUInt32LE(t,e/4294967296|0,r+5),n=9),T.bytes=n,t},m=(e,t)=>{if(!ensureUint8Array(e))throw new TypeError("uint8Array must be of Uint8Array type");t||(t=0);let r=readUInt8(e,t);if(r<253)return m.bytes=1,r;if(r===253)return m.bytes=3,readUInt16LE(e,t+1);if(r===254)return m.bytes=5,readUInt32LE(e,t+1);{m.bytes=9;let n=readUInt32LE(e,t+1),s=readUInt32LE(e,t+5)*4294967296+n;return k(s),s}};function b(e){return k(e),e<253?1:e<=65535?3:e<=4294967295?5:9}var Oe=`Stacks Message Signing:
`;function v(e){return hashSha256(N(e))}function N(e){let t=typeof e=="string"?utf8ToBytes(e):e,r=T(t.length);return concatByteArrays([utf8ToBytes(Oe),r,t])}function Re(e){let t=e.subarray(25),r=m(t),n=b(r);return t.slice(n)}var w=32;function Fe(e){if(e.length<w*2*2+1)throw new Error("Invalid signature");let t=e.slice(0,2),r=e.slice(2,2+w*2),n=e.slice(2+w*2);return {recoveryBytes:hexToBigInt(t),r,s:n}}function Ve(e){return e.slice(-2)+e.slice(0,-2)}var H=({hash:e,signature:t,recoveryBytes:r})=>recoverPublicKey(e,t,Number(r),!0),J=e=>{let{signature:t,mode:r="rsv"}=e,{r:n,s:o,recoveryBytes:s}=Fe(r==="rsv"?Ve(t):t);return {signature:new Signature(hexToBigInt(n),hexToBigInt(o)),recoveryBytes:s}},We=e=>{if(!e.publicKey&&!e.stxAddress)throw Error("[micro-stacks/connect[ verifyMessageSignature -- You must pass `stxAddress` if you are recovering the public key from the signature");let{message:t,mode:r="rsv"}=e,n=e.publicKey;try{let o=typeof t=="string"?v(t):t,{signature:s,recoveryBytes:a}=J({signature:e.signature,mode:r});if(!n){let[i]=c32addressDecode(e.stxAddress);n=bytesToHex(H({hash:o,signature:s,recoveryBytes:a}));let g=publicKeyToStxAddress(n,i);if(g!==e.stxAddress)return console.error(`[micro-stacks/connect] verifyMessageSignature Stacks address is not correct. expected: ${e.stxAddress}, received: ${g}`),!1}return verify(s,o,n,{strict:!1})}catch(o){return console.error("[micro-stacks/connect] verifyMessageSignature failed",o),!1}};

export { f as IS_BROWSER, _ as PersistedDataKeys, Q as TransactionTypes, M as WALLET_INSTALL_URLS, At as authenticate, D as decodeAuthResponse, Re as decodeMessage, C as defaultStorageAdapter, N as encodeMessage, le as generateAuthRequestPayload, K as generateSignMessagePayload, F as generateSignStructuredDataPayload, pe as generateSignedAuthRequest, p as genericTransactionPopupFactory, se as getAddressFromDID, ye as getBrowser, oe as getDIDType, E as getIsMobileDevice, H as getPublicKeyFromSignature, xe as getWalletInstallUrl, ge as handleAuthResponse, Se as handleSignMessageRequest, ve as handleSignStructuredDataRequest, v as hashMessage, it as makeContractCallToken, lt as makeContractDeployToken, ft as makeStxTransferToken, O as openSignMessagePopup, R as openSignStructuredDataPopup, Mt as openTransactionPopup, J as recoverSignature, c as safeGetPublicKey, me as signAuthRequest, We as verifyMessageSignature };
